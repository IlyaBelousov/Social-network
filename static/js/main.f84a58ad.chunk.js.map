{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Users/User.module.css","components/Header/Header.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo.tsx","components/Profile/Posts/MyPost.tsx","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/redux-store.ts","StoreContext.ts","components/Profile/Posts/AddPost.tsx","components/Users/User.tsx","components/Profile/Posts/Post.tsx","components/Profile/Posts/PostsWrapper.tsx","components/Profile/Profile.tsx","components/Dialogs/Message.tsx","components/Dialogs/Dialogs.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx","components/Profile/Profile.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","Header","className","s","header","src","Navbar","navbar","navbarItem","activeClassName","active","to","ProfileInfo","profileInformation","profileImage","person","personDescription","MyPost","posts","initialState","post","id","username","message","newPostText","dialogs","messages","newMessageText","rootReducer","combineReducers","profilePage","state","action","type","newPostMessage","newPost","unshift","newText","dialogsPage","body","newMessage","push","store","createStore","StoreContext","React","createContext","AddPost","props","createPost","onKeyPress","event","key","value","onChange","e","text","currentTarget","updateNewPostText","onClick","User","userBlock","userAvatar","userName","name","Post","postItem","PostWrapper","Consumer","dispatch","ChangeNewPostTextActionCreator","getState","usersPosts","map","p","Profile","profileCont","mainImage","Message","Dialogs","DialogItem","dialog","user","DialogsContainer","messageValue","sendMessageHandler","dialogsItems","t","messagesItems","m","disable","dialogsContainer","dialogItem","dialogUsers","dialogMessage","addMessage","ChangeMessageTextActionType","disabled","Music","Settings","App","path","render","rerenderEntireTree","ReactDOM","Provider","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.f84a58ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1Mxxr\",\"navbarItem\":\"Navbar_navbarItem__3M7c1\",\"active\":\"Navbar_active__2C-fL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"User_userBlock__1y1xh\",\"userAvatar\":\"User_userAvatar__2xlvm\",\"userName\":\"User_userName__3ecbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__IbpOc\"};","import React from 'react';\r\nimport s from './Header.module.css';\r\nfunction Header() {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://i.pinimg.com/originals/5f/53/5a/5f535aa08b3230f893f2a68e74eebf44.png' />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className={s.navbar}>\r\n            <div  className={s.navbarItem}><NavLink activeClassName={s.active} to='/profile'>Profile</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/dialogs'>Dialogs</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/music'>Music</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/settings'>Settings</NavLink></div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={s.profileInformation}>\r\n            <img src=\"https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png\"\r\n                 className={s.profileImage}/>\r\n\r\n            <div className={s.person}>\r\n                <div className={s.personDescription}> Ilya</div>\r\n                <div className={s.personDescription}> 26 y.o.</div>\r\n                <div className={s.personDescription}>Saint-Petersburg</div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\n\r\nconst MyPost = () => {\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className=\"myPost\">\r\n                <h3>Hey</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPost;","import {ActionsType} from './redux-store';\r\n\r\nlet initialState = {\r\n    posts: {\r\n        post: [\r\n            {id: 1, username: 'Liza', message: 'Hey! How are you?'},\r\n            {id: 2, username: 'Denchik', message: 'Hey! How are you?'},\r\n            {id: 3, username: 'Leo', message: 'Hey! How are you?'}\r\n        ],\r\n        newPostText: ''\r\n    }\r\n};\r\nexport const ProfileReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST' :\r\n            let newPostMessage = state.posts.newPostText;\r\n            let newPost = {id: 6, message: newPostMessage, username: 'Htoto'};\r\n            state.posts.post.unshift(newPost);\r\n            state.posts.newPostText = '';\r\n            return state;\r\n\r\n        case 'CHANGE-NEW-POST-TEXT':\r\n            state.posts.newPostText = action.newText;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import {ActionsType} from './redux-store';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, username: 'Liza'},\r\n        {id: 2, username: 'Denchik'},\r\n        {id: 3, username: 'Leo'},\r\n        {id: 4, username: 'Brodiyagi'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hey'},\r\n        {id: 2, message: 'Hey'},\r\n        {id: 3, message: 'Hey'},\r\n        {id: 4, message: 'Hey'}\r\n    ],\r\n    newMessageText: ''\r\n};\r\nexport const DialogsReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE':\r\n            let body = state.newMessageText;\r\n            let newMessage = {id: 6, message: body};\r\n            state.newMessageText = '';\r\n            state.messages.push(newMessage);\r\n            return state;\r\n        case 'CHANGE-MESSAGE-TEXT':\r\n            state.newMessageText = action.newMessage;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers, createStore} from 'redux';\r\nimport {ProfileReducer} from './profile-reducer';\r\nimport {DialogsReducer} from './dialogs-reducer';\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage:ProfileReducer,\r\n    dialogsPage:DialogsReducer\r\n})\r\nexport type AppStateType= ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer);\r\n\r\nexport type ActionsType = ProfileActionType | DialogsActionType\r\nexport type ProfileActionType =\r\n    ReturnType<typeof AddNewPostActionCreator>\r\n    | ReturnType<typeof ChangeNewPostTextActionCreator>\r\nexport type DialogsActionType =\r\n    ReturnType<typeof SendMessageActionCreator>\r\n    | ReturnType<typeof ChangeMessageTextActionType>\r\n\r\nexport const SendMessageActionCreator = () => {\r\n    return {type: 'SEND-MESSAGE'} as const;\r\n};\r\nexport const ChangeMessageTextActionType = (text: string) => {\r\n    return {\r\n        type: 'CHANGE-MESSAGE-TEXT',\r\n        newMessage: text\r\n    } as const;\r\n};\r\nexport const AddNewPostActionCreator = () => {\r\n    return {type: 'ADD-POST'} as const;\r\n};\r\nexport const ChangeNewPostTextActionCreator = (text: string) => {\r\n    return {type: 'CHANGE-NEW-POST-TEXT', newText: text} as const;\r\n\r\n};","import React from 'react';\r\nimport {store} from './redux/redux-store';\r\n\r\nexport const StoreContext= React.createContext(store)","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\ntype AddPostType = {\r\n    newPostText: string\r\n    updateNewPostText: (text: string) => void\r\n    createPost: () => void\r\n}\r\n\r\nconst AddPost = (props: AddPostType) => {\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let text = e.currentTarget.value;\r\n        if (text) {\r\n            props.updateNewPostText(text);\r\n        }\r\n    };\r\n\r\n    let createPost = () => {\r\n        props.createPost()\r\n    };\r\n\r\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            createPost();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.newPost}>\r\n            <input onKeyPress={onKeyPressHandler} value={props.newPostText} onChange={onChangeHandler}/>\r\n            <button onClick={()=>createPost()}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPost;","import React from 'react';\r\nimport s from './User.module.css';\r\n\r\ntype UserPropsType = {\r\n    name: string\r\n}\r\n\r\nconst User = (props: UserPropsType) => {\r\n    return (\r\n        <div className={s.userBlock}>\r\n            <div className={s.userAvatar}>\r\n                <img src=\"https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png\"/>\r\n            </div>\r\n            <div className={s.userName}>{props.name}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\nimport {messageType} from '../../../redux/state';\r\nimport User from '../../Users/User';\r\n\r\n\r\nconst Post = (props: messageType) => {\r\n    return (\r\n        <div className={s.postItem}>\r\n            {\r\n                <User name={props.username}/>\r\n            }\r\n            {props.message}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import {StoreContext} from '../../../StoreContext';\r\nimport {AddNewPostActionCreator, ChangeNewPostTextActionCreator} from '../../../redux/redux-store';\r\nimport AddPost from './AddPost';\r\nimport s from '../Profile.module.css';\r\nimport Post from './Post';\r\nimport React from 'react';\r\n\r\ntype PostMessageType = {\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\nexport const PostWrapper = () => {\r\n\r\n    return <StoreContext.Consumer>{\r\n        (store) => {\r\n            const AddPostChangeHandler = (text: string) => {\r\n                store.dispatch(ChangeNewPostTextActionCreator(text));\r\n            };\r\n            const CreatePostHandler = () => {\r\n                store.dispatch(AddNewPostActionCreator());\r\n            };\r\n            return <div>\r\n                <AddPost\r\n                    createPost={CreatePostHandler}\r\n                    updateNewPostText={AddPostChangeHandler}\r\n                    newPostText={store.getState().profilePage.posts.newPostText}/>\r\n                <div className={s.usersPosts}>\r\n                    {\r\n                        store.getState().profilePage.posts.post.map((p: PostMessageType) =>\r\n                            <Post username={p.username}\r\n                                  id={p.id}\r\n                                  message={p.message}/>)\r\n                    }\r\n                </div>\r\n            </div>;\r\n        }\r\n\r\n    }\r\n    </StoreContext.Consumer>;\r\n};\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport MyPost from './Posts/MyPost';\r\nimport {PostWrapper} from './Posts/PostsWrapper';\r\n\r\nfunction Profile() {\r\n    return <div className={s.profileCont}>\r\n        <img className={s.mainImage}\r\n             src=\"https://images.ctfassets.net/hrltx12pl8hq/4f6DfV5DbqaQUSw0uo0mWi/ff068ff5fc855601751499d694c0111a/shutterstock_376532611.jpg?fit=fill&w=800&h=300\"/>\r\n        <ProfileInfo/>\r\n        <MyPost/>\r\n        <PostWrapper/>\r\n    </div>;\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {\r\n    ChangeMessageTextActionType,\r\n    SendMessageActionCreator,\r\n} from '../../redux/redux-store';\r\nimport {NavLink} from 'react-router-dom';\r\nimport User from '../Users/User';\r\nimport Message from './Message';\r\nimport {StoreContext} from '../../StoreContext';\r\n\r\nconst Dialogs = () => {\r\n    return <DialogsContainer />\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n\r\ntype DialogItemType = {\r\n    id: number\r\n    username: string\r\n\r\n}\r\nexport const DialogItem = (props: DialogItemType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.active} className={s.user}><User\r\n                name={props.username}/></NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DialogsContainer = () => {\r\n    return <StoreContext.Consumer>{\r\n        (store) => {\r\n            let messageValue = store.getState().dialogsPage.newMessageText;\r\n\r\n            const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n                let text = e.currentTarget.value;\r\n                if (text) {\r\n                    store.dispatch(ChangeMessageTextActionType(text));\r\n                }\r\n            };\r\n            const onKeyPressHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n                if (event.key === 'Enter') {\r\n                    sendMessageHandler();\r\n                }\r\n            };\r\n            const sendMessageHandler = () => {\r\n                store.dispatch(SendMessageActionCreator());\r\n\r\n            };\r\n            let dialogsItems =\r\n                store.getState().dialogsPage.dialogs\r\n                    .map((t: DialogItemType) =>\r\n                        <DialogItem id={t.id}\r\n                                    username={t.username}/>);\r\n            let messagesItems =\r\n                store.getState().dialogsPage.messages\r\n                    .map(m =>\r\n                        <Message message={m.message}/>\r\n                    );\r\n            let disable = null;\r\n            if (!messageValue) {\r\n                disable = 'disable';\r\n            } else {\r\n                disable = null;\r\n            }\r\n            return <div className={s.dialogsContainer}>\r\n                <div className={s.dialogItem}>\r\n                    <div className={s.dialogUsers}>\r\n                        {dialogsItems}\r\n                    </div>\r\n                    <div className={s.dialogMessage}>\r\n                        {messagesItems}\r\n                    </div>\r\n                </div>\r\n                <div className={s.addMessage}>\r\n                    <textarea onKeyPress={onKeyPressHandler} value={messageValue} onChange={onChangeHandler}/>\r\n                    <button disabled={!!disable} onClick={sendMessageHandler}>Send</button>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n\r\n    }</StoreContext.Consumer>;\r\n};\r\n\r\n","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Profile from './components/Profile/Profile';\r\nimport {Route} from 'react-router-dom';\r\nimport Dialogs from './components/Dialogs/Dialogs';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\n\r\n\r\n// type AppPropsType = {\r\n//     state: AppStateType\r\n//     dispatch: (action: ProfileActionType | DialogsActionType) => void\r\n// }\r\n\r\nfunction App() {\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <Header/>\r\n            <Navbar/>\r\n            <div className=\"container-content\">\r\n                <Route path=\"/profile\" render={() =>\r\n                    <Profile/>}\r\n                />\r\n                <Route path=\"/dialogs\" render={() =>\r\n                    <Dialogs />}/>\r\n                <Route path=\"/music\" render={() => <Music/>}/>\r\n                <Route path=\"/settings\" render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport {store} from './redux/redux-store'\r\nimport { StoreContext } from './StoreContext';\r\n\r\n\r\nexport let rerenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <StoreContext.Provider value={store}>\r\n            <React.StrictMode>\r\n                <App/>\r\n            </React.StrictMode>\r\n            </StoreContext.Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrerenderEntireTree();\r\n\r\nstore.subscribe(rerenderEntireTree)\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCont\":\"Profile_profileCont__Cb60M\",\"mainImage\":\"Profile_mainImage__4aDZ5\",\"profileInformation\":\"Profile_profileInformation__3BK1r\",\"profileImage\":\"Profile_profileImage__1fSTy\",\"person\":\"Profile_person__Uj3bJ\",\"personDescription\":\"Profile_personDescription__RjZEY\",\"posts\":\"Profile_posts__1u4C7\",\"newPost\":\"Profile_newPost__3xvYh\",\"usersPosts\":\"Profile_usersPosts__MUglw\",\"postItem\":\"Profile_postItem__1Cau0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__1W94s\",\"dialogItem\":\"Dialogs_dialogItem__2BrAn\",\"addMessage\":\"Dialogs_addMessage__1TBpI\",\"dialog\":\"Dialogs_dialog__28ypv\",\"dialogUsers\":\"Dialogs_dialogUsers__h0OWE\",\"user\":\"Dialogs_user__3JAqJ\",\"dialogMessage\":\"Dialogs_dialogMessage__25uiP\",\"active\":\"Dialogs_active__34PuJ\"};"],"sourceRoot":""}