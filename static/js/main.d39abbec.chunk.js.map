{"version":3,"sources":["Login/Login.module.css","components/Profile/Profile.module.css","components/Users/User.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.tsx","components/Profile/ProfileStatus.tsx","components/Profile/ProfileInfo.tsx","components/Profile/Posts/MyPost.tsx","components/Profile/Posts/AddPost.tsx","components/Users/User.tsx","components/Profile/Posts/Post.tsx","api/api.ts","redux/profile-reducer.ts","components/Profile/Posts/PostsWrapper.tsx","components/Profile/Profile.tsx","components/Dialogs/Message.tsx","redux/dialogs-reducer.ts","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","Preloader.gif","common/Preloader.tsx","components/Users/Users.tsx","redux/users-reducer.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","Login/LoginForm.tsx","Login/Login.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Header/Header.module.css"],"names":["module","exports","Navbar","className","s","navbar","navbarItem","activeClassName","active","to","ProfileStatus","state","editMode","status","props","onStatusChange","e","setState","currentTarget","value","activateEditMode","deActivateEditMode","updateStatus","prevProps","prevState","this","console","log","onBlur","onDoubleClick","onChange","autoFocus","React","Component","ProfileInfo","profileInformation","src","photo","profileImage","person","fullName","personDescription","lookingForAJobDescription","contacts","vk","MyPost","posts","AddPost","createPost","newPost","onKeyPress","event","key","newPostText","text","updateNewPostText","onClick","User","userBlock","userAvatar","photoUrl","alt","userName","name","Post","postItem","id","username","message","instance","axios","create","baseURL","withCredentials","headers","userAPI","currentPage","pageSize","get","then","response","data","post","delete","profileAPI","userId","put","authAPI","ADD_POST","CHANGE_NEW_POST_TEXT","SET_USER_PROFILE","SET_USER_STATUS","UPDATE_USER_STATUS","initialState","userProfile","aboutMe","github","facebook","website","twitter","instagram","lookingForAJob","photos","small","large","SetUserStatus","type","PostWrapper","SuperPostWrapper","UsersPostContainer","connect","profilePage","dispatch","ChangeNewPostTextActionCreator","usersPosts","map","p","Profile","match","params","SetUserProfileThunk","SetUserStatusThunk","profileCont","UpdateUserStatusThunk","ProfileContainer","compose","isAuth","auth","profileData","resultCode","withRouter","Message","dialogs","messages","newMessageText","mapStateToProps","WithAuthRedirect","restProps","DialogItem","dialog","user","DialogsContainer","dialogsPage","updateNewMessageBody","newMessage","ChangeMessageTextActionType","sendMessage","messageValue","sendMessageHandler","disable","dialogsContainer","dialogItem","dialogUsers","t","dialogMessage","m","addMessage","disabled","Music","Settings","Preloader","preloader","Users","getUsersThunk","pageNumber","pagesCount","Math","ceil","totalCount","pages","i","push","onPageChanged","selected","isFetching","items","u","wrapper","container","usersBlock","followed","followInProgress","some","UnFollowThunk","userButton","FollowThunk","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOW_IN_PROGRESS","UsersInitialState","error","SetCurrentPage","SetToggleIsFetching","SetFollowInProgress","isFollow","UsersContainer","usersPage","userID","Header","header","title","loginBlock","login","SET_AUTH_DATA","AuthInitialState","email","HeaderContainer","SetAuthDataThunk","HeaderWithConnect","ReduxLoginForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Login","loginContainer","formData","App","path","render","rootReducer","combineReducers","action","stateCopy","newPostMessage","unshift","body","filter","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d39abbec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__14htP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCont\":\"Profile_profileCont__1XpQf\",\"profileInformation\":\"Profile_profileInformation__NgMD4\",\"profileImage\":\"Profile_profileImage__2MyN7\",\"person\":\"Profile_person__EqmtB\",\"personDescription\":\"Profile_personDescription__1KBzj\",\"posts\":\"Profile_posts__1EH8w\",\"newPost\":\"Profile_newPost__2-zcE\",\"usersPosts\":\"Profile_usersPosts__2eFIr\",\"postItem\":\"Profile_postItem__1HkXD\",\"status\":\"Profile_status__qo_NJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"User_userBlock__iHGZn\",\"userAvatar\":\"User_userAvatar__1mUJh\",\"wrapper\":\"User_wrapper__1xyD2\",\"container\":\"User_container__QsORz\",\"name\":\"User_name__1WxGk\",\"message\":\"User_message__2kgIm\",\"time\":\"User_time__3u5g-\",\"status\":\"User_status__2E5gi\",\"country\":\"User_country__3cx8I\",\"city\":\"User_city__3f8B_\",\"location\":\"User_location__GFz2A\",\"usersBlock\":\"User_usersBlock__-p0BH\",\"userButton\":\"User_userButton__10JWE\",\"pages\":\"User_pages__3dHIx\",\"selected\":\"User_selected__2smQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__Tbgap\",\"navbarItem\":\"Navbar_navbarItem__1KNZm\",\"active\":\"Navbar_active__3Rtia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__g5GY1\",\"dialogItem\":\"Dialogs_dialogItem__3pe_B\",\"addMessage\":\"Dialogs_addMessage__p1aZo\",\"dialog\":\"Dialogs_dialog__1wG-_\",\"dialogUsers\":\"Dialogs_dialogUsers__3nt6_\",\"user\":\"Dialogs_user__3pi0y\",\"dialogMessage\":\"Dialogs_dialogMessage__2bZ3C\",\"active\":\"Dialogs_active__12afm\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className={s.navbar}>\r\n            <div  className={s.navbarItem}><NavLink activeClassName={s.active} to='/profile'>Profile</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/dialogs'>Dialogs</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/users'>Users</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/music'>Music</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/settings'>Settings</NavLink></div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, {ChangeEvent} from 'react';\r\nimport s from './Profile.module.css';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport class ProfileStatus extends React.Component <ProfileStatusPropsType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e) {\r\n            this.setState({\r\n                status: e.currentTarget.value\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        });\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>) {\r\n        if(prevProps.status!==this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.status);\r\n        return <div>\r\n            <div onBlur={this.deActivateEditMode} onDoubleClick={this.activateEditMode}>\r\n                {\r\n                    this.state.editMode\r\n                        ? <input onChange={this.onStatusChange} className={s.status} autoFocus={true}\r\n                                 value={this.state.status}/>\r\n                        : <span>{this.props.status}</span>\r\n                }\r\n            </div>\r\n\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport {ProfileStatus} from './ProfileStatus';\r\n\r\ntype ProfileInfoPropsType = {\r\n    photo: string | undefined\r\n    contacts: {\r\n        github: string\r\n        facebook: string\r\n        website: string,\r\n        vk: string\r\n        twitter: string\r\n        instagram: string,\r\n    }\r\n    fullName: string\r\n    lookingForAJobDescription: string\r\n    status:string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    return (\r\n        <div className={s.profileInformation}>\r\n            <img src={props.photo}\r\n                 className={s.profileImage}/>\r\n\r\n            <div className={s.person}>\r\n                <h2 className={s.fullName}> {props.fullName}</h2>\r\n                <h4 className={s.personDescription}>{props.lookingForAJobDescription}</h4>\r\n                <h4 className={s.personDescription}>{props.contacts.vk}</h4>\r\n                <ProfileStatus updateStatus={props.updateStatus} status={props.status}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\n\r\nconst MyPost = () => {\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className=\"myPost\">\r\n                <h3>Hey</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPost;","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\ntype AddPostType = {\r\n    newPostText: string\r\n    updateNewPostText: (text: string) => void\r\n    createPost: () => void\r\n}\r\n\r\nconst AddPost = (props: AddPostType) => {\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let text = e.currentTarget.value;\r\n        if (text) {\r\n            props.updateNewPostText(text);\r\n        }\r\n    };\r\n\r\n    let createPost = () => {\r\n        props.createPost()\r\n    };\r\n\r\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            createPost();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.newPost}>\r\n            <input onKeyPress={onKeyPressHandler} value={props.newPostText} onChange={onChangeHandler}/>\r\n            <button onClick={createPost}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPost;","import React from 'react';\r\nimport s from './User.module.css';\r\n\r\ntype UserPropsType = {\r\n    name: string\r\n    photoUrl: string | null\r\n    status?: string\r\n    id:number\r\n}\r\n\r\nconst User = (props: UserPropsType) => {\r\n    return (\r\n        <div className={s.userBlock}>\r\n            <div className={s.userAvatar}>\r\n                {\r\n                    props.photoUrl ?\r\n                        <img alt={'avatar'} src={props.photoUrl}/>\r\n                        : <img alt={'avatar'}\r\n                               src={'https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png'}/>\r\n                }\r\n            </div>\r\n            <div className={s.userName}>{props.name}</div>\r\n            <p className={s.status}>{props.status}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\nimport User from '../../Users/User';\r\ntype MessageType={\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\n\r\nconst Post = (props: MessageType) => {\r\n    return (\r\n        <div className={s.postItem}>\r\n            {\r\n                <User id={props.id} photoUrl={\"https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png\"} name={props.username}/>\r\n            }\r\n            {props.message}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import axios from 'axios';\r\nimport {UserDataType} from '../redux/users-reducer';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '4e9f6c7c-553d-4c3d-8aa0-0bbb01a71677'\r\n    }\r\n});\r\nexport const userAPI = {\r\n    GetUsers: (currentPage: number, pageSize: number) => {\r\n        return instance.get<{ items: UserDataType[], totalCount: number }>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    Follow: (id: number) => {\r\n        return instance.post(`follow/${id}`);\r\n    },\r\n    UnFollow: (id: number) => {\r\n        return instance.delete(`follow/${id}`);\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    GetUserProfile: (userId: number) => {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    GetUserStatus: (userId: number) => {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    UpdateStatus:(status:string)=>{\r\n        return instance.put(`profile/status`,{status})\r\n    }\r\n};\r\nexport const authAPI = {\r\n    me: () => {\r\n        return instance.get<{ data: { id: number, email: string, login: string }, resultCode: number }>('auth/me');\r\n    }\r\n};\r\n\r\n\r\n","import {ActionsType} from './redux-store';\r\nimport {Dispatch} from 'redux';\r\nimport {profileAPI} from '../api/api';\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst CHANGE_NEW_POST_TEXT = 'CHANGE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\r\n\r\ntype PostType = { id: number, username: string, message: string }\r\nexport type PostsType = Array<PostType>\r\nexport type UserProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        github: string\r\n        facebook: string\r\n        website: string,\r\n        vk: string\r\n        twitter: string\r\n        instagram: string,\r\n    }\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    userId?: number | null\r\n    status: string\r\n}\r\n\r\ntype ProfileInitialStateType = {\r\n    post: PostsType\r\n    newPostText: string\r\n    userProfile: UserProfileType\r\n}\r\nlet initialState: ProfileInitialStateType = {\r\n    post: [\r\n        {id: 1, username: 'Liza', message: 'Hey! How are you?'},\r\n        {id: 2, username: 'Denchik', message: 'Hey! How are you?'},\r\n        {id: 3, username: 'Leo', message: 'Hey! How are you?'}\r\n    ],\r\n    userProfile: {\r\n        aboutMe: '',\r\n        contacts: {\r\n            github: '',\r\n            facebook: '',\r\n            website: '',\r\n            vk: '',\r\n            twitter: '',\r\n            instagram: '',\r\n        },\r\n        fullName: '',\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: '',\r\n        photos: {\r\n            small: '',\r\n            large: '',\r\n        },\r\n        userId: null,\r\n        status: ''\r\n    },\r\n    newPostText: ''\r\n};\r\nexport const ProfileReducer = (state = initialState, action: ActionsType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST : {\r\n            let stateCopy = {...state, post: [...state.post]};\r\n            let newPostMessage = stateCopy.newPostText;\r\n            let newPost = {id: 6, message: newPostMessage, username: 'Htoto'};\r\n            stateCopy.post.unshift(newPost);\r\n            stateCopy.newPostText = '';\r\n            return {...stateCopy};\r\n\r\n        }\r\n\r\n        case CHANGE_NEW_POST_TEXT: {\r\n            let stateCopy = {...state};\r\n            stateCopy.newPostText = action.text;\r\n            return {...stateCopy};\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...action.profileData}\r\n            };\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...state.userProfile, status: action.status}\r\n            };\r\n        }\r\n        case UPDATE_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...state.userProfile, status: action.status}\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const AddNewPostActionCreator = () => {\r\n    return {type: ADD_POST} as const;\r\n};\r\nexport const ChangeNewPostTextActionCreator = (text: string) => {\r\n    return {type: CHANGE_NEW_POST_TEXT, text} as const;\r\n};\r\nexport const SetUserProfileActionCreator = (profileData: UserProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profileData\r\n    } as const;\r\n};\r\nexport const SetUserStatus = (status: string) => {\r\n    return {\r\n        type: SET_USER_STATUS,\r\n        status,\r\n    } as const;\r\n};\r\nexport const UpdateUserStatus = (status: string) => {\r\n    return {\r\n        type: UPDATE_USER_STATUS,\r\n        status,\r\n    } as const;\r\n};\r\n\r\nexport const SetUserProfileThunk = (userId: number) => (dispatch: Dispatch) => {\r\n    profileAPI.GetUserProfile(userId)\r\n        .then(response => {\r\n            dispatch(SetUserProfileActionCreator(response.data));\r\n        });\r\n    profileAPI.GetUserStatus(userId)\r\n        .then(response => {\r\n            dispatch(SetUserStatus(response.data));\r\n        });\r\n};\r\nexport const SetUserStatusThunk = (userId: number) => (dispatch: Dispatch) => {\r\n    profileAPI.GetUserStatus(userId)\r\n        .then(response => {\r\n            dispatch(SetUserStatus(response.data));\r\n        });\r\n};\r\nexport const UpdateUserStatusThunk = (status: string) => (dispatch: Dispatch) => {\r\n    profileAPI.UpdateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(SetUserStatus(status));\r\n            }\r\n        });\r\n};\r\n","import {AppStateType} from '../../../redux/redux-store';\r\nimport AddPost from './AddPost';\r\nimport s from '../Profile.module.css';\r\nimport Post from './Post';\r\nimport React from 'react';\r\nimport {Dispatch} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {AddNewPostActionCreator, ChangeNewPostTextActionCreator} from '../../../redux/profile-reducer';\r\n\r\ntype PostMessageType = {\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\nexport const PostWrapper = () => {\r\n    return <div>\r\n        <SuperPostWrapper/>\r\n        <UsersPostContainer/>\r\n    </div>;\r\n};\r\ntype UsersPostPropsType = {\r\n    post:Array<PostMessageType>\r\n}\r\n\r\nexport const UsersPost = (props: UsersPostPropsType) => {\r\n    return <div className={s.usersPosts}>\r\n        {\r\n            props.post.map((p: PostMessageType) =>\r\n                <Post key={p.id} username={p.username}\r\n                      id={p.id}\r\n                      message={p.message}/>)\r\n        }\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        createPost: () => {\r\n            dispatch(AddNewPostActionCreator());\r\n        },\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(ChangeNewPostTextActionCreator(text));\r\n        }\r\n    };\r\n};\r\nconst SuperPostWrapper = connect(mapStateToProps, mapDispatchToProps)(AddPost);\r\nconst UsersPostMapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        post: state.profilePage.post\r\n    };\r\n};\r\nconst UsersPostContainer = connect(UsersPostMapStateToProps)(UsersPost);","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport MyPost from './Posts/MyPost';\r\nimport {PostWrapper} from './Posts/PostsWrapper';\r\nimport {\r\n    SetUserProfileThunk,\r\n    SetUserStatusThunk,\r\n    UpdateUserStatusThunk,\r\n    UserProfileType\r\n} from '../../redux/profile-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {connect} from 'react-redux';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\n\r\nimport {compose} from 'redux';\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string | undefined\r\n}\r\nexport type MapDispatchToPropsType = {\r\n    SetUserProfileThunk: (userId: number) => void\r\n    SetUserStatusThunk: (userId: number) => void\r\n    UpdateUserStatusThunk: (status: string) => void\r\n}\r\ntype ProfileMapStateToPropsType = {\r\n    isAuth: boolean\r\n    userProfile: UserProfileType\r\n    contacts: {\r\n        github: string\r\n        facebook: string\r\n        website: string,\r\n        vk: string\r\n        twitter: string\r\n        instagram: string,\r\n    }\r\n    fullName: string\r\n    lookingForAJobDescription: string\r\n    status:string\r\n}\r\n\r\n\r\ntype PropsType = ProfileMapStateToPropsType & MapDispatchToPropsType\r\ntype ProfilePropsType = RouteComponentProps<PathParamsType> & PropsType\r\n\r\nexport class Profile extends React.Component<ProfilePropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = '2';\r\n        }\r\n        this.props.SetUserProfileThunk(+userId);\r\n        this.props.SetUserStatusThunk(+userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div className={s.profileCont}>\r\n            <ProfileInfo\r\n                updateStatus={this.props.UpdateUserStatusThunk}\r\n                status={this.props.status}\r\n                fullName={this.props.fullName}\r\n                lookingForAJobDescription={this.props.lookingForAJobDescription}\r\n                contacts={this.props.contacts}\r\n                photo={this.props.userProfile.photos.small ? this.props.userProfile.photos.small : 'https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png'}/>\r\n            <MyPost/>\r\n            <PostWrapper/>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType): ProfileMapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        userProfile: state.profilePage.userProfile,\r\n        contacts: state.profilePage.userProfile.contacts,\r\n        fullName: state.profilePage.userProfile.fullName,\r\n        lookingForAJobDescription: state.profilePage.userProfile.lookingForAJobDescription,\r\n        status:state.profilePage.userProfile.status\r\n    };\r\n};\r\n\r\n\r\nexport const ProfileContainer = compose<React.ComponentType>(\r\n    connect(MapStateToProps, {SetUserProfileThunk, SetUserStatusThunk, UpdateUserStatusThunk}),\r\n    withRouter,\r\n)(Profile);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import {ActionsType} from './redux-store';\r\nexport type DialogsReducerInitialStateType={\r\n    dialogs: Array<UserType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\ntype UserType={id: number, username: string}\r\ntype MessageType={id: number, message: string}\r\n\r\nlet initialState:DialogsReducerInitialStateType = {\r\n    dialogs: [\r\n        {id: 1, username: 'Liza'},\r\n        {id: 2, username: 'Denchik'},\r\n        {id: 3, username: 'Leo'},\r\n        {id: 4, username: 'Brodiyagi'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hey'},\r\n        {id: 2, message: 'Hey'},\r\n        {id: 3, message: 'Hey'},\r\n        {id: 4, message: 'Hey'}\r\n    ],\r\n    newMessageText: ''\r\n};\r\nexport const DialogsReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE': {\r\n            let stateCopy={...state,dialogs:[...state.dialogs],messages:[...state.messages]}\r\n            let body = stateCopy.newMessageText;\r\n            let newMessage = {id: 6, message: body};\r\n            stateCopy.newMessageText = '';\r\n            stateCopy.messages.push(newMessage);\r\n            return {...stateCopy};\r\n        }\r\n        case 'CHANGE-MESSAGE-TEXT': {\r\n            let stateCopy={...state}\r\n            stateCopy.newMessageText = action.newMessage;\r\n            return {...stateCopy};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const SendMessageActionCreator = () => {\r\n    return {type: 'SEND-MESSAGE'} as const;\r\n};\r\nexport const ChangeMessageTextActionType = (text: string) => {\r\n    return {\r\n        type: 'CHANGE-MESSAGE-TEXT',\r\n        newMessage: text\r\n    } as const;\r\n};","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props;\r\n        if (!isAuth) return <Redirect to={'/login'}/>;\r\n        return <Component {...restProps as T}/>;\r\n    };\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {\r\n    AppStateType\r\n} from '../../redux/redux-store';\r\nimport {NavLink} from 'react-router-dom';\r\nimport User from '../Users/User';\r\nimport Message from './Message';\r\nimport {connect} from 'react-redux';\r\nimport {compose, Dispatch} from 'redux';\r\nimport {\r\n    ChangeMessageTextActionType,\r\n    DialogsReducerInitialStateType,\r\n    SendMessageActionCreator\r\n} from '../../redux/dialogs-reducer';\r\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect';\r\n\r\ntype DialogsType =\r\n    { sendMessage: () => void, updateNewMessageBody: (text: string) => void }\r\n    & DialogsMapStateToPropsType\r\ntype DialogsMapStateToPropsType = {\r\n    dialogsPage: DialogsReducerInitialStateType\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst MapStateToProps = (state: AppStateType): DialogsMapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (text: string) => {\r\n            dispatch(ChangeMessageTextActionType(text));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(SendMessageActionCreator());\r\n        },\r\n    };\r\n};\r\n\r\n\r\ntype DialogItemType = {\r\n    id: number\r\n    username: string\r\n}\r\nexport const DialogItem = (props: DialogItemType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.active} className={s.user}><User id={props.id}\r\n                                                                                                     photoUrl={'https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png'}\r\n                                                                                                     name={props.username}\r\n            /></NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const Dialogs = (props: DialogsType) => {\r\n\r\n    let messageValue = props.dialogsPage.newMessageText;\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value;\r\n        if (text) {\r\n            props.updateNewMessageBody(text);\r\n        }\r\n    };\r\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.key === 'Enter') {\r\n            sendMessageHandler();\r\n        }\r\n    };\r\n    const sendMessageHandler = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let disable = null;\r\n    if (!messageValue) {\r\n        disable = 'disable';\r\n    } else {\r\n        disable = null;\r\n    }\r\n    return (\r\n        <div className={s.dialogsContainer}>\r\n            <div className={s.dialogItem}>\r\n                <div className={s.dialogUsers}>\r\n                    {props.dialogsPage.dialogs\r\n                        .map((t: DialogItemType) =>\r\n                            <DialogItem key={t.id} id={t.id}\r\n                                        username={t.username}/>)\r\n                    }\r\n                </div>\r\n                <div className={s.dialogMessage}>\r\n                    {props.dialogsPage.messages\r\n                        .map(m =>\r\n                            <Message key={m.id} message={m.message}/>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={s.addMessage}>\r\n                <textarea onKeyPress={onKeyPressHandler} value={messageValue} onChange={onChangeHandler}/>\r\n                <button disabled={!!disable} onClick={sendMessageHandler}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(\r\n    connect(MapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect,\r\n)(Dialogs);\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/Preloader.cef7eb40.gif\";","import React from 'react';\r\nimport preloader from '../Preloader.gif';\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <img alt={'icon'} src={preloader}/>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport User from './User';\r\nimport s from './User.module.css';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {\r\n    UserDataType\r\n} from '../../redux/users-reducer';\r\nimport {Preloader} from '../../common/Preloader';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\n\r\ntype UsersPropsType = UsersMapStateToPropsType & UsersMapDispatchToPropsType\r\n\r\ntype UsersMapStateToPropsType = {\r\n    isAuth:boolean\r\n    items: Array<UserDataType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followInProgress: number[]\r\n}\r\ntype UsersMapDispatchToPropsType = {\r\n    FollowThunk: (id: number) => void\r\n    UnFollowThunk: (id: number) => void\r\n    getUsersThunk: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport class Users extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {pages.map(p => {\r\n                        return <span\r\n                            onClick={() => {\r\n                                this.onPageChanged(p);\r\n                            }}\r\n                            className={(this.props.currentPage === p\r\n                                ? s.selected\r\n                                : s.pages)}>{p}</span>;\r\n                    })}\r\n                </div>\r\n                {this.props.isFetching && <Preloader/>}\r\n                {\r\n                    this.props.items.map(u => {\r\n                        return (\r\n                            <div key={u.id} className={s.wrapper}>\r\n                                <div className={s.container}>\r\n                                    <div className={s.usersBlock}>\r\n                                        <NavLink to={`/profile/${u.id}`}>\r\n                                            <User key={u.id}\r\n                                                  name={u.name}\r\n                                                  photoUrl={u.photos.large}\r\n                                                  status={u.status}\r\n                                                  id={u.id}\r\n                                            />\r\n                                        </NavLink>\r\n\r\n                                        <div>\r\n                                            {u.followed ?\r\n                                                <button disabled={this.props.followInProgress.some(id => id === u.id)}\r\n                                                        onClick={() => this.props.UnFollowThunk(u.id)}\r\n                                                        className={s.userButton}>UNFOLLOW</button>\r\n\r\n                                                : <button disabled={this.props.followInProgress.some(id => id === u.id)}\r\n                                                          onClick={() => this.props.FollowThunk(u.id)}\r\n                                                          className={s.userButton}>FOLLOW</button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>);\r\n                    })}\r\n            </div>);\r\n    }\r\n}\r\n\r\n\r\nexport const UsersMapStateToProps = (state: AppStateType): UsersMapStateToPropsType => {\r\n    return {\r\n        isAuth:state.auth.isAuth,\r\n        items: state.usersPage.items,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followInProgress: state.usersPage.followInProgress,\r\n    };\r\n};\r\n","import {ActionsType} from './redux-store';\r\nimport {userAPI} from '../api/api';\r\nimport {Dispatch} from 'redux';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst FOLLOW_IN_PROGRESS = 'FOLLOW_IN_PROGRESS';\r\n\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserStateType = {\r\n    items: Array<UserDataType>\r\n    totalCount: number\r\n    error: null | string\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followInProgress: number[]\r\n\r\n}\r\n\r\nexport type UserDataType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    photos: PhotosType\r\n    status: string\r\n}\r\n\r\nlet UsersInitialState: UserStateType = {\r\n    items: [],\r\n    totalCount: 0,\r\n    error: null,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followInProgress: [],\r\n};\r\n\r\nexport const UsersReducer = (state = UsersInitialState, action: ActionsType): UserStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followInProgress: action.isFollow\r\n                    ? [...state.followInProgress, action.id]\r\n                    : [...state.followInProgress.filter(id => id !== action.id)],\r\n            };\r\n        }\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, items: action.items};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalCount: action.totalCount};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const FollowActionCreator = (userID: number) => {\r\n    return {type: FOLLOW, userID} as const;\r\n};\r\nexport const UnFollowActionCreator = (userID: number) => {\r\n    return {type: UNFOLLOW, userID} as const;\r\n};\r\n\r\nexport const SetUsers = (items: Array<UserDataType>) => {\r\n    return {type: SET_USERS, items} as const;\r\n};\r\nexport const SetCurrentPage = (currentPage: number) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage} as const;\r\n};\r\nexport const SetTotalUsersCount = (totalCount: number) => {\r\n    return {type: SET_TOTAL_USERS_COUNT, totalCount} as const;\r\n};\r\nexport const SetToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const;\r\n};\r\nexport const SetFollowInProgress = (isFollow: boolean, id: number) => {\r\n    return {\r\n        type: FOLLOW_IN_PROGRESS,\r\n        isFollow,\r\n        id,\r\n    } as const;\r\n};\r\nexport const getUsersThunk = (currentPage: number, pageSize: number) => (dispatch: Dispatch) => {\r\n    dispatch(SetToggleIsFetching(true));\r\n    userAPI.GetUsers(currentPage, pageSize)\r\n        .then(response => {\r\n            dispatch(SetToggleIsFetching(false));\r\n            dispatch(SetUsers(response.items));\r\n            dispatch(SetTotalUsersCount(500));\r\n            dispatch(SetCurrentPage(currentPage));\r\n        });\r\n};\r\nexport const UnFollowThunk = (id: number) => (dispatch: Dispatch) => {\r\n    dispatch(SetFollowInProgress(true, id));\r\n    userAPI.UnFollow(id)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(UnFollowActionCreator(id));\r\n            }\r\n            dispatch(SetFollowInProgress(false, id));\r\n        });\r\n};\r\nexport const FollowThunk = (id: number) => (dispatch: Dispatch) => {\r\n    dispatch(SetFollowInProgress(true, id));\r\n    userAPI.Follow(id)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(FollowActionCreator(id));\r\n            }\r\n            dispatch(SetFollowInProgress(false, id));\r\n        });\r\n};","import {connect} from 'react-redux';\r\nimport {Users, UsersMapStateToProps} from './Users';\r\nimport {\r\n    SetCurrentPage, getUsersThunk, FollowThunk, UnFollowThunk\r\n} from '../../redux/users-reducer';\r\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport React from 'react';\r\n\r\n\r\nexport const UsersContainer = compose<React.ComponentType>(\r\n    connect(UsersMapStateToProps, {\r\n        FollowThunk,\r\n        UnFollowThunk,\r\n        SetCurrentPage,\r\n        getUsersThunk,\r\n    }),\r\n    WithAuthRedirect\r\n)(Users);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nfunction Header(props: PropsType) {\r\n    return (\r\n        <header className={s.header}>\r\n\r\n            <h2 className={s.title}>Social Network</h2>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    props.isAuth ?\r\n                        props.login\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\n;\r\n\r\nexport default Header;","import {ActionsType} from './redux-store';\r\nimport {Dispatch} from 'redux';\r\nimport {authAPI} from '../api/api';\r\n\r\nconst SET_AUTH_DATA = 'SET_AUTH_DATA';\r\n\r\n\r\nexport type AuthDataType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nlet AuthInitialState: AuthDataType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport const AuthReducer = (state = AuthInitialState, action: ActionsType): AuthDataType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const SetAuthData = (userId: number, email: string, login: string) => {\r\n    return {\r\n        type: SET_AUTH_DATA,\r\n        data: {\r\n            userId,\r\n            email,\r\n            login\r\n        }\r\n    } as const;\r\n};\r\nexport const SetAuthDataThunk = () => (dispatch: Dispatch) => {\r\n    authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(SetAuthData(response.data.data.id, response.data.data.email, response.data.data.login));\r\n            }\r\n        });\r\n};\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {SetAuthDataThunk} from '../../redux/auth-reducer';\r\n\r\ntype MapStateToPropsType = {\r\n    data: {\r\n        userId: number | null\r\n        email: string | null\r\n        login: string | null\r\n    },\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    SetAuthDataThunk: () => void\r\n}\r\ntype HeaderPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport class HeaderContainer extends React.Component<HeaderPropsType> {\r\n    componentDidMount() {\r\n        this.props.SetAuthDataThunk()\r\n    }\r\n\r\n    render() {\r\n        return <Header\r\n            login={this.props.data.login}\r\n            isAuth={this.props.isAuth}/>;\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        data: state.auth,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nexport const HeaderWithConnect = connect(MapStateToProps, {SetAuthDataThunk})(HeaderContainer);","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\n\r\nexport type FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field name={'login'} placeholder={'Login'} component={'input'}/></div>\r\n            <div><Field name={'password'} placeholder={'Password'} component={'input'} type=\"password\"/></div>\r\n            <div><Field name={'rememberMe'} component={'input'} type=\"checkbox\"/> remember me</div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nexport const ReduxLoginForm = reduxForm<FormDataType>({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport {FormDataType, ReduxLoginForm} from './LoginForm';\r\n\r\n\r\nexport const Login = () => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        console.log(formData);\r\n    };\r\n    return <div className={s.loginContainer}>\r\n        <h1>Login</h1>\r\n        <ReduxLoginForm onSubmit={onSubmit}/>\r\n    </div>;\r\n};\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {ProfileContainer} from './components/Profile/Profile';\r\nimport {Route} from 'react-router-dom';\r\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport {UsersContainer} from './components/Users/UsersContainer';\r\nimport {HeaderWithConnect} from './components/Header/HeaderContainer';\r\nimport {Login} from './Login/Login';\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <HeaderWithConnect/>\r\n            <Navbar/>\r\n            <div className=\"container-content\">\r\n                <Route path=\"/profile/:userId?\" render={() =>\r\n                    <ProfileContainer/>}\r\n                />\r\n                <Route path=\"/dialogs\" render={() =>\r\n                    <DialogsContainer/>}/>\r\n                <Route path=\"/users\" render={() =>\r\n                    <UsersContainer/>}/>\r\n                <Route path=\"/music\" render={() => <Music/>}/>\r\n                <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                <Route path=\"/login\" render={() => <Login/>}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {\r\n    AddNewPostActionCreator,\r\n    ChangeNewPostTextActionCreator,\r\n    ProfileReducer,\r\n    SetUserProfileActionCreator, SetUserStatus, UpdateUserStatus\r\n} from './profile-reducer';\r\nimport {ChangeMessageTextActionType, DialogsReducer, SendMessageActionCreator} from './dialogs-reducer';\r\nimport {\r\n    FollowActionCreator, SetFollowInProgress,\r\n    SetCurrentPage,\r\n    SetToggleIsFetching, SetTotalUsersCount, SetUsers,\r\n    UsersReducer, UnFollowActionCreator,\r\n} from './users-reducer';\r\nimport {AuthReducer, SetAuthData} from './auth-reducer';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nexport type ActionsType = ProfileActionType\r\n    | DialogsActionType\r\n    | UsersActionType\r\n    | AuthActionType\r\n\r\nexport type ProfileActionType =\r\n    ReturnType<typeof AddNewPostActionCreator>\r\n    | ReturnType<typeof ChangeNewPostTextActionCreator>\r\n    | ReturnType<typeof SetUserProfileActionCreator>\r\nexport type DialogsActionType =\r\n    ReturnType<typeof SendMessageActionCreator>\r\n    | ReturnType<typeof ChangeMessageTextActionType>\r\n    | ReturnType<typeof SetUserStatus>\r\n    | ReturnType<typeof UpdateUserStatus>\r\n\r\n\r\nexport type UsersActionType =\r\n    ReturnType<typeof FollowActionCreator>\r\n    | ReturnType<typeof SetUsers>\r\n    | ReturnType<typeof SetCurrentPage>\r\n    | ReturnType<typeof SetTotalUsersCount>\r\n    | ReturnType<typeof SetToggleIsFetching>\r\n    | ReturnType<typeof UnFollowActionCreator>\r\n    | ReturnType<typeof SetFollowInProgress>\r\n\r\nexport type AuthActionType = ReturnType<typeof SetAuthData>\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    dialogsPage: DialogsReducer,\r\n    usersPage: UsersReducer,\r\n    auth: AuthReducer,\r\n    form: formReducer\r\n});\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <React.StrictMode>\r\n                    <App/>\r\n                </React.StrictMode>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1n4f9\",\"title\":\"Header_title__2eQxD\",\"loginBlock\":\"Header_loginBlock__2LGuh\"};"],"sourceRoot":""}