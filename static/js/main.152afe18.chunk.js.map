{"version":3,"sources":["components/Users/User.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo.tsx","components/Profile/Posts/MyPost.tsx","components/Profile/Posts/AddPost.tsx","components/Users/User.tsx","components/Profile/Posts/Post.tsx","redux/profile-reducer.ts","components/Profile/Posts/PostsWrapper.tsx","components/Profile/Profile.tsx","components/Dialogs/Message.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogsContainer.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","Preloader.gif","common/Preloader.tsx","components/Users/Users.tsx","redux/users-reducer.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","App.tsx","redux/redux-store.ts","index.tsx"],"names":["module","exports","Navbar","className","s","navbar","navbarItem","activeClassName","active","to","ProfileInfo","props","profileInformation","src","photo","profileImage","person","personDescription","MyPost","posts","AddPost","createPost","newPost","onKeyPress","event","key","value","newPostText","onChange","e","text","currentTarget","updateNewPostText","onClick","User","userBlock","userAvatar","photoUrl","alt","userName","name","status","Post","postItem","id","username","message","ADD_POST","CHANGE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","post","userProfile","aboutMe","contacts","facebook","website","vk","twitter","instagram","fullName","lookingForAJob","lookingForAJobDescription","photos","small","large","userId","PostWrapper","SuperPostWrapper","UsersPostContainer","connect","state","profilePage","dispatch","type","ChangeNewPostTextActionCreator","usersPosts","map","p","Profile","this","match","params","axios","get","then","response","SetUserProfile","data","profileCont","mainImage","React","Component","ComponentWithURLData","withRouter","ProfileContainer","profileData","Message","dialogs","messages","newMessageText","DialogsContainer","SuperDialogsContainer","DialogItem","dialog","user","dialogsPage","updateNewMessageBody","newMessage","ChangeMessageTextActionType","sendMessage","messageValue","sendMessageHandler","disable","dialogsContainer","dialogItem","dialogUsers","t","dialogMessage","m","addMessage","disabled","Music","Settings","Preloader","preloader","Users","SetToggleIsFetching","currentPage","pageSize","SetUsers","items","SetTotalUsersCount","pageNumber","SetCurrentPage","pagesCount","Math","ceil","totalCount","pages","i","push","onPageChanged","selected","isFetching","u","wrapper","container","usersBlock","followed","UnFollow","userButton","Follow","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","UsersInitialState","error","UsersContainer","usersPage","userID","Header","header","loginBlock","isAuth","login","SET_AUTH_DATA","AuthInitialState","email","HeaderContainer","withCredentials","resultCode","SetAuthData","HeaderWithConnect","auth","App","path","render","rootReducer","combineReducers","action","stateCopy","newPostMessage","unshift","body","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.152afe18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"User_userBlock__1y1xh\",\"userAvatar\":\"User_userAvatar__2xlvm\",\"wrapper\":\"User_wrapper__3AnU0\",\"container\":\"User_container__26aTz\",\"name\":\"User_name__20vHZ\",\"message\":\"User_message__2VeYn\",\"time\":\"User_time__2YFfd\",\"status\":\"User_status__1yoN_\",\"country\":\"User_country__CTOml\",\"city\":\"User_city__3govu\",\"location\":\"User_location__3U8WY\",\"usersBlock\":\"User_usersBlock__2yHqg\",\"userButton\":\"User_userButton__SP5j_\",\"pages\":\"User_pages__1ffBA\",\"selected\":\"User_selected__1gMF5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1Mxxr\",\"navbarItem\":\"Navbar_navbarItem__3M7c1\",\"active\":\"Navbar_active__2C-fL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__1W94s\",\"dialogItem\":\"Dialogs_dialogItem__2BrAn\",\"addMessage\":\"Dialogs_addMessage__1TBpI\",\"dialog\":\"Dialogs_dialog__28ypv\",\"dialogUsers\":\"Dialogs_dialogUsers__h0OWE\",\"user\":\"Dialogs_user__3JAqJ\",\"dialogMessage\":\"Dialogs_dialogMessage__25uiP\",\"active\":\"Dialogs_active__34PuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__IbpOc\",\"loginBlock\":\"Header_loginBlock__CV5cB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCont\":\"Profile_profileCont__Cb60M\",\"mainImage\":\"Profile_mainImage__4aDZ5\",\"profileInformation\":\"Profile_profileInformation__3BK1r\",\"profileImage\":\"Profile_profileImage__1fSTy\",\"person\":\"Profile_person__Uj3bJ\",\"personDescription\":\"Profile_personDescription__RjZEY\",\"posts\":\"Profile_posts__1u4C7\",\"newPost\":\"Profile_newPost__3xvYh\",\"usersPosts\":\"Profile_usersPosts__MUglw\",\"postItem\":\"Profile_postItem__1Cau0\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className={s.navbar}>\r\n            <div  className={s.navbarItem}><NavLink activeClassName={s.active} to='/profile'>Profile</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/dialogs'>Dialogs</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/users'>Users</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/music'>Music</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/settings'>Settings</NavLink></div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n\r\ntype ProfileInfoPropsType = {\r\n    photo: string|undefined\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    return (\r\n        <div className={s.profileInformation}>\r\n            <img src={props.photo}\r\n                 className={s.profileImage}/>\r\n\r\n            <div className={s.person}>\r\n                <div className={s.personDescription}> Ilya</div>\r\n                <div className={s.personDescription}> 26 y.o.</div>\r\n                <div className={s.personDescription}>Saint-Petersburg</div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\n\r\nconst MyPost = () => {\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className=\"myPost\">\r\n                <h3>Hey</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPost;","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\ntype AddPostType = {\r\n    newPostText: string\r\n    updateNewPostText: (text: string) => void\r\n    createPost: () => void\r\n}\r\n\r\nconst AddPost = (props: AddPostType) => {\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let text = e.currentTarget.value;\r\n        if (text) {\r\n            props.updateNewPostText(text);\r\n        }\r\n    };\r\n\r\n    let createPost = () => {\r\n        props.createPost()\r\n    };\r\n\r\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            createPost();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.newPost}>\r\n            <input onKeyPress={onKeyPressHandler} value={props.newPostText} onChange={onChangeHandler}/>\r\n            <button onClick={createPost}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPost;","import React from 'react';\r\nimport s from './User.module.css';\r\n\r\ntype UserPropsType = {\r\n    name: string\r\n    photoUrl: string | null\r\n    status?: string\r\n    id:number\r\n}\r\n\r\nconst User = (props: UserPropsType) => {\r\n    return (\r\n        <div className={s.userBlock}>\r\n            <div className={s.userAvatar}>\r\n                {\r\n                    props.photoUrl ?\r\n                        <img alt={'avatar'} src={props.photoUrl}/>\r\n                        : <img alt={'avatar'}\r\n                               src={'https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png'}/>\r\n                }\r\n            </div>\r\n            <div className={s.userName}>{props.name}</div>\r\n            <p className={s.status}>{props.status}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\nimport User from '../../Users/User';\r\ntype MessageType={\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\n\r\nconst Post = (props: MessageType) => {\r\n    return (\r\n        <div className={s.postItem}>\r\n            {\r\n                <User id={props.id} photoUrl={\"https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png\"} name={props.username}/>\r\n            }\r\n            {props.message}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import {ActionsType, ProfileActionType} from './redux-store';\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst CHANGE_NEW_POST_TEXT = 'CHANGE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\ntype PostType = { id: number, username: string, message: string }\r\nexport type PostsType = Array<PostType>\r\nexport type UserProfileType = {\r\n    aboutMe?: string\r\n    contacts?: {\r\n        facebook?: string\r\n        website?: string,\r\n        vk?: string\r\n        twitter?: string\r\n        instagram?: string,\r\n    }\r\n    fullName?: string\r\n    lookingForAJob?: boolean\r\n    lookingForAJobDescription?: string\r\n    photos?: {\r\n        small?: string\r\n        large?: string\r\n    }\r\n    userId?: number | null\r\n}\r\n\r\ntype ProfileInitialStateType = {\r\n    post: PostsType\r\n    newPostText: string\r\n    userProfile: UserProfileType\r\n}\r\nlet initialState: ProfileInitialStateType = {\r\n    post: [\r\n        {id: 1, username: 'Liza', message: 'Hey! How are you?'},\r\n        {id: 2, username: 'Denchik', message: 'Hey! How are you?'},\r\n        {id: 3, username: 'Leo', message: 'Hey! How are you?'}\r\n    ],\r\n    userProfile: {\r\n        aboutMe: '',\r\n        contacts: {\r\n            facebook: '',\r\n            website: '',\r\n            vk: '',\r\n            twitter: '',\r\n            instagram: '',\r\n        },\r\n        fullName: '',\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: '',\r\n        photos: {\r\n            small: '',\r\n            large: '',\r\n        },\r\n        userId: null,\r\n    },\r\n    newPostText: ''\r\n};\r\nexport const ProfileReducer = (state = initialState, action: ActionsType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST : {\r\n            let stateCopy = {...state, post: [...state.post]};\r\n            let newPostMessage = stateCopy.newPostText;\r\n            let newPost = {id: 6, message: newPostMessage, username: 'Htoto'};\r\n            stateCopy.post.unshift(newPost);\r\n            stateCopy.newPostText = '';\r\n            return {...stateCopy};\r\n\r\n        }\r\n\r\n        case CHANGE_NEW_POST_TEXT: {\r\n            let stateCopy = {...state};\r\n            stateCopy.newPostText = action.text;\r\n            return {...stateCopy};\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...action.profileData}\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const AddNewPostActionCreator = () => {\r\n    return {type: ADD_POST} as const;\r\n};\r\nexport const ChangeNewPostTextActionCreator = (text: string) => {\r\n    return {type: CHANGE_NEW_POST_TEXT, text} as const;\r\n};\r\nexport const SetUserProfileActionCreator = (profileData: UserProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profileData\r\n    } as const;\r\n};","import {AppStateType} from '../../../redux/redux-store';\r\nimport AddPost from './AddPost';\r\nimport s from '../Profile.module.css';\r\nimport Post from './Post';\r\nimport React from 'react';\r\nimport {Dispatch} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {AddNewPostActionCreator, ChangeNewPostTextActionCreator} from '../../../redux/profile-reducer';\r\n\r\ntype PostMessageType = {\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\nexport const PostWrapper = () => {\r\n    return <div>\r\n        <SuperPostWrapper/>\r\n        <UsersPostContainer/>\r\n    </div>;\r\n};\r\ntype UsersPostPropsType = {\r\n    post:Array<PostMessageType>\r\n}\r\n\r\nexport const UsersPost = (props: UsersPostPropsType) => {\r\n    return <div className={s.usersPosts}>\r\n        {\r\n            props.post.map((p: PostMessageType) =>\r\n                <Post username={p.username}\r\n                      id={p.id}\r\n                      message={p.message}/>)\r\n        }\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        createPost: () => {\r\n            dispatch(AddNewPostActionCreator());\r\n        },\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(ChangeNewPostTextActionCreator(text));\r\n        }\r\n    };\r\n};\r\nconst SuperPostWrapper = connect(mapStateToProps, mapDispatchToProps)(AddPost);\r\nconst UsersPostMapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        post: state.profilePage.post\r\n    };\r\n};\r\nconst UsersPostContainer = connect(UsersPostMapStateToProps)(UsersPost);","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport MyPost from './Posts/MyPost';\r\nimport {PostWrapper} from './Posts/PostsWrapper';\r\nimport axios from 'axios';\r\nimport {SetUserProfileActionCreator, UserProfileType} from '../../redux/profile-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {connect} from 'react-redux';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\n\r\ntype PathParamsType = {\r\n    userId: string|undefined\r\n}\r\n\r\ntype PropsType = ProfileMapStateToPropsType & MapDispatchToPropsType\r\ntype ProfilePropsType = RouteComponentProps<PathParamsType> & PropsType\r\n\r\nexport class Profile extends React.Component<ProfilePropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = '2';\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n            .then(response => {\r\n                this.props.SetUserProfile(response.data);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <div className={s.profileCont}>\r\n            <img className={s.mainImage}\r\n                 src=\"https://images.ctfassets.net/hrltx12pl8hq/4f6DfV5DbqaQUSw0uo0mWi/ff068ff5fc855601751499d694c0111a/shutterstock_376532611.jpg?fit=fill&w=800&h=300\"/>\r\n            <ProfileInfo photo={this.props.userProfile.photos?.small}/>\r\n            <MyPost/>\r\n            <PostWrapper/>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Profile;\r\ntype ProfileMapStateToPropsType = {\r\n    userProfile: UserProfileType\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType): ProfileMapStateToPropsType => {\r\n    return {\r\n        userProfile: state.profilePage.userProfile\r\n    };\r\n};\r\nexport type MapDispatchToPropsType = {\r\n    SetUserProfile: (profileData: UserProfileType) => void\r\n}\r\nconst ComponentWithURLData = withRouter(Profile);\r\nexport const ProfileContainer = connect(MapStateToProps, {SetUserProfile: SetUserProfileActionCreator})(ComponentWithURLData);\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import {ActionsType} from './redux-store';\r\nexport type DialogsReducerInitialStateType={\r\n    dialogs: Array<UserType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\ntype UserType={id: number, username: string}\r\ntype MessageType={id: number, message: string}\r\n\r\nlet initialState:DialogsReducerInitialStateType = {\r\n    dialogs: [\r\n        {id: 1, username: 'Liza'},\r\n        {id: 2, username: 'Denchik'},\r\n        {id: 3, username: 'Leo'},\r\n        {id: 4, username: 'Brodiyagi'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hey'},\r\n        {id: 2, message: 'Hey'},\r\n        {id: 3, message: 'Hey'},\r\n        {id: 4, message: 'Hey'}\r\n    ],\r\n    newMessageText: ''\r\n};\r\nexport const DialogsReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE': {\r\n            let stateCopy={...state,dialogs:[...state.dialogs],messages:[...state.messages]}\r\n            let body = stateCopy.newMessageText;\r\n            let newMessage = {id: 6, message: body};\r\n            stateCopy.newMessageText = '';\r\n            stateCopy.messages.push(newMessage);\r\n            return {...stateCopy};\r\n        }\r\n        case 'CHANGE-MESSAGE-TEXT': {\r\n            let stateCopy={...state}\r\n            stateCopy.newMessageText = action.newMessage;\r\n            return {...stateCopy};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const SendMessageActionCreator = () => {\r\n    return {type: 'SEND-MESSAGE'} as const;\r\n};\r\nexport const ChangeMessageTextActionType = (text: string) => {\r\n    return {\r\n        type: 'CHANGE-MESSAGE-TEXT',\r\n        newMessage: text\r\n    } as const;\r\n};","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {\r\n    AppStateType\r\n} from '../../redux/redux-store';\r\nimport {NavLink} from 'react-router-dom';\r\nimport User from '../Users/User';\r\nimport Message from './Message';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n    ChangeMessageTextActionType,\r\n    DialogsReducerInitialStateType,\r\n    SendMessageActionCreator\r\n} from '../../redux/dialogs-reducer';\r\n\r\nconst DialogsContainer = () => {\r\n    return <SuperDialogsContainer/>;\r\n};\r\n\r\nexport default DialogsContainer;\r\n\r\ntype DialogItemType = {\r\n    id: number\r\n    username: string\r\n}\r\nexport const DialogItem = (props: DialogItemType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.active} className={s.user}><User id={props.id}\r\n                                                                                                     photoUrl={'https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png'}\r\n                                                                                                     name={props.username}\r\n            /></NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype DialogsType = {\r\n    dialogsPage: DialogsReducerInitialStateType\r\n    sendMessage: () => void\r\n    updateNewMessageBody: (text: string) => void\r\n}\r\n\r\nexport const Dialogs = (props: DialogsType) => {\r\n    let messageValue = props.dialogsPage.newMessageText;\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value;\r\n        if (text) {\r\n            props.updateNewMessageBody(text);\r\n        }\r\n    };\r\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.key === 'Enter') {\r\n            sendMessageHandler();\r\n        }\r\n    };\r\n    const sendMessageHandler = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let disable = null;\r\n    if (!messageValue) {\r\n        disable = 'disable';\r\n    } else {\r\n        disable = null;\r\n    }\r\n    return <div className={s.dialogsContainer}>\r\n        <div className={s.dialogItem}>\r\n            <div className={s.dialogUsers}>\r\n                {props.dialogsPage.dialogs\r\n                    .map((t: DialogItemType) =>\r\n                        <DialogItem id={t.id}\r\n                                    username={t.username}/>)\r\n                }\r\n            </div>\r\n            <div className={s.dialogMessage}>\r\n                {props.dialogsPage.messages\r\n                    .map(m =>\r\n                        <Message message={m.message}/>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className={s.addMessage}>\r\n            <textarea onKeyPress={onKeyPressHandler} value={messageValue} onChange={onChangeHandler}/>\r\n            <button disabled={!!disable} onClick={sendMessageHandler}>Send</button>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (text: string) => {\r\n            dispatch(ChangeMessageTextActionType(text));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(SendMessageActionCreator());\r\n        },\r\n    };\r\n};\r\n\r\n\r\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\n","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/Preloader.cef7eb40.gif\";","import React from 'react';\r\nimport preloader from '../Preloader.gif';\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <img alt={'icon'} src={preloader}/>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport User from './User';\r\nimport s from './User.module.css';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {\r\n    UserDataType\r\n} from '../../redux/users-reducer';\r\nimport axios from 'axios';\r\nimport {Preloader} from '../../common/Preloader';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\ntype UsersPropsType = UsersMapStateToPropsType & UsersMapDispatchToPropsType\r\n\r\ntype UsersMapStateToPropsType = {\r\n    items: Array<UserDataType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\ntype UsersMapDispatchToPropsType = {\r\n    Follow: (userID: number) => void\r\n    UnFollow: (userID: number) => void\r\n    SetUsers: (items: Array<UserDataType>) => void\r\n    SetCurrentPage: (currentPage: number) => void\r\n    SetTotalUsersCount: (totalCount: number) => void\r\n    SetToggleIsFetching: (isFetching: boolean) => void\r\n}\r\n\r\nexport class Users extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.SetToggleIsFetching(true);\r\n        axios.get<{ items: UserDataType[], totalCount: number }>(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.SetToggleIsFetching(false);\r\n                this.props.SetUsers(response.data.items);\r\n                this.props.SetTotalUsersCount(200);\r\n            });\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.SetToggleIsFetching(true);\r\n        this.props.SetCurrentPage(pageNumber);\r\n        axios.get<{ items: UserDataType[] }>(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.SetToggleIsFetching(false);\r\n                this.props.SetUsers(response.data.items);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {pages.map(p => {\r\n                        return <span\r\n                            onClick={() => {\r\n                                this.onPageChanged(p);\r\n                            }}\r\n                            className={(this.props.currentPage === p\r\n                                ? s.selected\r\n                                : s.pages)}>{p}</span>;\r\n                    })}\r\n                </div>\r\n                {this.props.isFetching && <Preloader/>}\r\n                {\r\n                    this.props.items.map(u => {\r\n                        const FollowHandler = () => {\r\n                            this.props.Follow(u.id);\r\n                        };\r\n                        const UnFollowHandler = () => {\r\n                            this.props.UnFollow(u.id);\r\n                        };\r\n                        return (\r\n                            <div key={u.id} className={s.wrapper}>\r\n                                <div className={s.container}>\r\n                                    <div className={s.usersBlock}>\r\n                                        <NavLink to={`/profile/${u.id}`}>\r\n                                            <User key={u.id}\r\n                                                  name={u.name}\r\n                                                  photoUrl={u.photos.large}\r\n                                                  status={u.status}\r\n                                                  id={u.id}\r\n                                            />\r\n                                        </NavLink>\r\n\r\n                                        <div>\r\n                                            {u.followed ?\r\n                                                <button onClick={UnFollowHandler}\r\n                                                        className={s.userButton}>UNFOLLOW</button>\r\n                                                : <button onClick={FollowHandler}\r\n                                                          className={s.userButton}>FOLLOW</button>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>);\r\n                    })}\r\n            </div>);\r\n    }\r\n}\r\n\r\n\r\nexport const UsersMapStateToProps = (state: AppStateType): UsersMapStateToPropsType => {\r\n    return {\r\n        items: state.usersPage.items,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    };\r\n};\r\n","import {ActionsType} from './redux-store';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserStateType = {\r\n    items: Array<UserDataType>\r\n    totalCount: number\r\n    error: null | string\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    photos: PhotosType\r\n    status: string\r\n}\r\n\r\nlet UsersInitialState: UserStateType = {\r\n    items: [],\r\n    totalCount: 0,\r\n    error: null,\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    isFetching: false\r\n};\r\n\r\nexport const UsersReducer = (state = UsersInitialState, action: ActionsType): UserStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, items: action.items};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalCount: action.totalCount};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const Follow = (userID: number) => {\r\n    return {type: FOLLOW, userID} as const;\r\n};\r\nexport const UnFollow = (userID: number) => {\r\n    return {type: UNFOLLOW, userID} as const;\r\n};\r\n\r\nexport const SetUsers = (items: Array<UserDataType>) => {\r\n    return {type: SET_USERS, items} as const;\r\n};\r\nexport const SetCurrentPage = (currentPage: number) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage} as const;\r\n};\r\nexport const SetTotalUsersCount = (totalCount: number) => {\r\n    return {type: SET_TOTAL_USERS_COUNT, totalCount} as const;\r\n};\r\nexport const SetToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const;\r\n};","import {connect} from 'react-redux';\r\nimport {Users, UsersMapStateToProps} from './Users';\r\nimport {\r\n    Follow,\r\n    SetToggleIsFetching,\r\n    UnFollow,\r\n    SetUsers,\r\n    SetCurrentPage,\r\n    SetTotalUsersCount\r\n} from '../../redux/users-reducer';\r\n\r\n\r\n\r\nexport const UsersContainer = connect(UsersMapStateToProps, {\r\n    Follow,\r\n    UnFollow,\r\n    SetUsers,\r\n    SetCurrentPage,\r\n    SetTotalUsersCount,\r\n    SetToggleIsFetching,\r\n})(Users);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nfunction Header(props: PropsType) {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://i.pinimg.com/originals/5f/53/5a/5f535aa08b3230f893f2a68e74eebf44.png\"/>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    props.isAuth ?\r\n                        props.login\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\n;\r\n\r\nexport default Header;","import {ActionsType} from './redux-store';\r\n\r\nconst SET_AUTH_DATA = 'SET_AUTH_DATA';\r\n\r\n\r\nexport type AuthDataType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nlet AuthInitialState: AuthDataType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport const AuthReducer = (state = AuthInitialState, action: ActionsType): AuthDataType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const SetAuthData = (userId: number, email: string, login: string) => {\r\n    return {\r\n        type: SET_AUTH_DATA,\r\n        data: {\r\n            userId,\r\n            email,\r\n            login\r\n        }\r\n    } as const;\r\n};\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {SetAuthData} from '../../redux/auth-reducer';\r\n\r\ntype MapStateToPropsType = {\r\n    data: {\r\n        userId: number | null\r\n        email: string | null\r\n        login: string | null\r\n    },\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    SetAuthData: (userId: number, email: string, login: string) => void\r\n}\r\ntype HeaderPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport class HeaderContainer extends React.Component<HeaderPropsType> {\r\n    componentDidMount() {\r\n        axios.get<{ data: { id: number, email: string, login: string }, resultCode: number }>(`https://social-network.samuraijs.com/api/1.0/auth/me`,\r\n            {withCredentials: true})\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    this.props.SetAuthData(response.data.data.id, response.data.data.email, response.data.data.login);\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <Header\r\n            login={this.props.data.login}\r\n            isAuth={this.props.isAuth}/>;\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType):MapStateToPropsType => {\r\n    return {\r\n        data: state.auth,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nexport const HeaderWithConnect = connect(MapStateToProps, {SetAuthData})(HeaderContainer);","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport  {ProfileContainer} from './components/Profile/Profile';\r\nimport {Route} from 'react-router-dom';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport {UsersContainer} from './components/Users/UsersContainer';\r\nimport { HeaderWithConnect} from './components/Header/HeaderContainer';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <HeaderWithConnect/>\r\n            <Navbar/>\r\n            <div className=\"container-content\">\r\n                <Route path=\"/profile/:userId?\" render={() =>\r\n                    <ProfileContainer/>}\r\n                />\r\n                <Route path=\"/dialogs\" render={() =>\r\n                    <DialogsContainer />}/>\r\n                <Route path=\"/users\" render={() =>\r\n                    <UsersContainer/>}/>\r\n                <Route path=\"/music\" render={() => <Music/>}/>\r\n                <Route path=\"/settings\" render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default App;\r\n","import {combineReducers, createStore} from 'redux';\r\nimport {\r\n    AddNewPostActionCreator,\r\n    ChangeNewPostTextActionCreator,\r\n    ProfileReducer,\r\n    SetUserProfileActionCreator\r\n} from './profile-reducer';\r\nimport {ChangeMessageTextActionType, DialogsReducer, SendMessageActionCreator} from './dialogs-reducer';\r\nimport {\r\n    Follow,\r\n    SetCurrentPage,\r\n    SetToggleIsFetching, SetTotalUsersCount, SetUsers, UnFollow,\r\n    UsersReducer\r\n} from './users-reducer';\r\nimport {AuthReducer, SetAuthData} from './auth-reducer';\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    dialogsPage: DialogsReducer,\r\n    usersPage: UsersReducer,\r\n    auth: AuthReducer,\r\n});\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer);\r\n\r\nexport type ActionsType = ProfileActionType\r\n    | DialogsActionType\r\n    | UsersActionType\r\n    | AuthActionType\r\nexport type ProfileActionType =\r\n    ReturnType<typeof AddNewPostActionCreator>\r\n    | ReturnType<typeof ChangeNewPostTextActionCreator>\r\n    | ReturnType<typeof SetUserProfileActionCreator>\r\nexport type DialogsActionType =\r\n    ReturnType<typeof SendMessageActionCreator>\r\n    | ReturnType<typeof ChangeMessageTextActionType>\r\n\r\n\r\nexport type UsersActionType =\r\n    ReturnType<typeof Follow>\r\n    | ReturnType<typeof SetUsers>\r\n    | ReturnType<typeof SetCurrentPage>\r\n    | ReturnType<typeof SetTotalUsersCount>\r\n    | ReturnType<typeof SetToggleIsFetching>\r\n    | ReturnType<typeof UnFollow>\r\nexport type AuthActionType = ReturnType<typeof SetAuthData>\r\n\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <React.StrictMode>\r\n                    <App/>\r\n                </React.StrictMode>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}