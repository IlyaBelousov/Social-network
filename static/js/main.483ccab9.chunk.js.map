{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","components/Users/User.module.css","components/Header/Header.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo.tsx","components/Profile/Posts/MyPost.tsx","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/redux-store.ts","components/Profile/Posts/AddPost.tsx","components/Users/User.tsx","components/Profile/Posts/Post.tsx","components/Profile/Posts/PostsWrapper.tsx","components/Profile/Profile.tsx","components/Dialogs/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx","components/Profile/Profile.module.css"],"names":["module","exports","Header","className","s","header","src","Navbar","navbar","navbarItem","activeClassName","active","to","ProfileInfo","profileInformation","profileImage","person","personDescription","MyPost","posts","initialState","post","id","username","message","newPostText","dialogs","messages","newMessageText","rootReducer","combineReducers","profilePage","state","action","type","stateCopy","newPostMessage","newPost","unshift","newText","dialogsPage","body","newMessage","push","store","createStore","AddPost","props","createPost","onKeyPress","event","key","value","onChange","e","text","currentTarget","updateNewPostText","onClick","User","userBlock","userAvatar","userName","name","Post","postItem","PostWrapper","SuperPostWrapper","UsersPostContainer","connect","dispatch","ChangeNewPostTextActionCreator","usersPosts","map","p","Profile","profileCont","mainImage","Message","DialogsContainer","SuperDialogsContainer","DialogItem","dialog","user","updateNewMessageBody","ChangeMessageTextActionType","sendMessage","messageValue","sendMessageHandler","disable","dialogsContainer","dialogItem","dialogUsers","t","dialogMessage","m","addMessage","disabled","Music","Settings","App","path","render","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.483ccab9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__g5GY1\",\"dialogItem\":\"Dialogs_dialogItem__3pe_B\",\"addMessage\":\"Dialogs_addMessage__p1aZo\",\"dialog\":\"Dialogs_dialog__1wG-_\",\"dialogUsers\":\"Dialogs_dialogUsers__3nt6_\",\"user\":\"Dialogs_user__3pi0y\",\"dialogMessage\":\"Dialogs_dialogMessage__2bZ3C\",\"active\":\"Dialogs_active__12afm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__Tbgap\",\"navbarItem\":\"Navbar_navbarItem__1KNZm\",\"active\":\"Navbar_active__3Rtia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"User_userBlock__iHGZn\",\"userAvatar\":\"User_userAvatar__1mUJh\",\"userName\":\"User_userName__1CNlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1n4f9\"};","import React from 'react';\r\nimport s from './Header.module.css';\r\nfunction Header() {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://i.pinimg.com/originals/5f/53/5a/5f535aa08b3230f893f2a68e74eebf44.png' />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className={s.navbar}>\r\n            <div  className={s.navbarItem}><NavLink activeClassName={s.active} to='/profile'>Profile</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/dialogs'>Dialogs</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/music'>Music</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/settings'>Settings</NavLink></div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={s.profileInformation}>\r\n            <img src=\"https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png\"\r\n                 className={s.profileImage}/>\r\n\r\n            <div className={s.person}>\r\n                <div className={s.personDescription}> Ilya</div>\r\n                <div className={s.personDescription}> 26 y.o.</div>\r\n                <div className={s.personDescription}>Saint-Petersburg</div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\n\r\nconst MyPost = () => {\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className=\"myPost\">\r\n                <h3>Hey</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPost;","import {ActionsType} from './redux-store';\r\n\r\ntype PostType = { id: number, username: string, message: string }\r\nexport type PostsType = Array<PostType>\r\n\r\ntype InitialStatePostType = {\r\n        post: PostsType\r\n        newPostText: string\r\n}\r\nlet initialState: InitialStatePostType = {\r\n        post: [\r\n            {id: 1, username: 'Liza', message: 'Hey! How are you?'},\r\n            {id: 2, username: 'Denchik', message: 'Hey! How are you?'},\r\n            {id: 3, username: 'Leo', message: 'Hey! How are you?'}\r\n        ],\r\n        newPostText: ''\r\n};\r\nexport const ProfileReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST' : {\r\n            let stateCopy = {...state,post:[...state.post]}\r\n            let newPostMessage = stateCopy.newPostText;\r\n            let newPost = {id: 6, message: newPostMessage, username: 'Htoto'};\r\n            stateCopy.post.unshift(newPost);\r\n            stateCopy.newPostText = '';\r\n            return {...stateCopy}\r\n\r\n        }\r\n\r\n        case 'CHANGE-NEW-POST-TEXT': {\r\n            let stateCopy = {...state}\r\n            stateCopy.newPostText = action.newText;\r\n            return {...stateCopy};\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import {ActionsType} from './redux-store';\r\nexport type DialogsReducerInitialStateType={\r\n    dialogs: Array<UserType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\ntype UserType={id: number, username: string}\r\ntype MessageType={id: number, message: string}\r\n\r\nlet initialState:DialogsReducerInitialStateType = {\r\n    dialogs: [\r\n        {id: 1, username: 'Liza'},\r\n        {id: 2, username: 'Denchik'},\r\n        {id: 3, username: 'Leo'},\r\n        {id: 4, username: 'Brodiyagi'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hey'},\r\n        {id: 2, message: 'Hey'},\r\n        {id: 3, message: 'Hey'},\r\n        {id: 4, message: 'Hey'}\r\n    ],\r\n    newMessageText: ''\r\n};\r\nexport const DialogsReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE': {\r\n            let stateCopy={...state,dialogs:[...state.dialogs],messages:[...state.messages]}\r\n            let body = stateCopy.newMessageText;\r\n            let newMessage = {id: 6, message: body};\r\n            stateCopy.newMessageText = '';\r\n            stateCopy.messages.push(newMessage);\r\n            return {...stateCopy};\r\n        }\r\n        case 'CHANGE-MESSAGE-TEXT': {\r\n            let stateCopy={...state}\r\n            stateCopy.newMessageText = action.newMessage;\r\n            return {...stateCopy};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers, createStore} from 'redux';\r\nimport {ProfileReducer} from './profile-reducer';\r\nimport {DialogsReducer} from './dialogs-reducer';\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    dialogsPage: DialogsReducer\r\n});\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer);\r\n\r\nexport type ActionsType = ProfileActionType | DialogsActionType\r\nexport type ProfileActionType =\r\n    ReturnType<typeof AddNewPostActionCreator>\r\n    | ReturnType<typeof ChangeNewPostTextActionCreator>\r\nexport type DialogsActionType =\r\n    ReturnType<typeof SendMessageActionCreator>\r\n    | ReturnType<typeof ChangeMessageTextActionType>\r\n\r\nexport const SendMessageActionCreator = () => {\r\n    return {type: 'SEND-MESSAGE'} as const;\r\n};\r\nexport const ChangeMessageTextActionType = (text: string) => {\r\n    return {\r\n        type: 'CHANGE-MESSAGE-TEXT',\r\n        newMessage: text\r\n    } as const;\r\n};\r\nexport const AddNewPostActionCreator = () => {\r\n    return {type: 'ADD-POST'} as const;\r\n};\r\nexport const ChangeNewPostTextActionCreator = (text: string) => {\r\n    return {type: 'CHANGE-NEW-POST-TEXT', newText: text} as const;\r\n};","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\ntype AddPostType = {\r\n    newPostText: string\r\n    updateNewPostText: (text: string) => void\r\n    createPost: () => void\r\n}\r\n\r\nconst AddPost = (props: AddPostType) => {\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let text = e.currentTarget.value;\r\n        if (text) {\r\n            props.updateNewPostText(text);\r\n        }\r\n    };\r\n\r\n    let createPost = () => {\r\n        props.createPost()\r\n    };\r\n\r\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            createPost();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.newPost}>\r\n            <input onKeyPress={onKeyPressHandler} value={props.newPostText} onChange={onChangeHandler}/>\r\n            <button onClick={createPost}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPost;","import React from 'react';\r\nimport s from './User.module.css';\r\n\r\ntype UserPropsType = {\r\n    name: string\r\n}\r\n\r\nconst User = (props: UserPropsType) => {\r\n    return (\r\n        <div className={s.userBlock}>\r\n            <div className={s.userAvatar}>\r\n                <img src=\"https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png\"/>\r\n            </div>\r\n            <div className={s.userName}>{props.name}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\nimport User from '../../Users/User';\r\ntype MessageType={\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\n\r\nconst Post = (props: MessageType) => {\r\n    return (\r\n        <div className={s.postItem}>\r\n            {\r\n                <User name={props.username}/>\r\n            }\r\n            {props.message}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import {AddNewPostActionCreator, AppStateType, ChangeNewPostTextActionCreator} from '../../../redux/redux-store';\r\nimport AddPost from './AddPost';\r\nimport s from '../Profile.module.css';\r\nimport Post from './Post';\r\nimport React from 'react';\r\nimport {Dispatch} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\ntype PostMessageType = {\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\nexport const PostWrapper = () => {\r\n    return <div>\r\n        <SuperPostWrapper/>\r\n        <UsersPostContainer/>\r\n    </div>;\r\n};\r\ntype UsersPostPropsType = {\r\n    post:Array<PostMessageType>\r\n}\r\n\r\nexport const UsersPost = (props: UsersPostPropsType) => {\r\n    return <div className={s.usersPosts}>\r\n        {\r\n            props.post.map((p: PostMessageType) =>\r\n                <Post username={p.username}\r\n                      id={p.id}\r\n                      message={p.message}/>)\r\n        }\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        createPost: () => {\r\n            dispatch(AddNewPostActionCreator());\r\n        },\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(ChangeNewPostTextActionCreator(text));\r\n        }\r\n    };\r\n};\r\nconst SuperPostWrapper = connect(mapStateToProps, mapDispatchToProps)(AddPost);\r\nconst UsersPostMapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        post: state.profilePage.post\r\n    };\r\n};\r\nconst UsersPostContainer = connect(UsersPostMapStateToProps)(UsersPost);","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport MyPost from './Posts/MyPost';\r\nimport {PostWrapper} from './Posts/PostsWrapper';\r\n\r\nfunction Profile() {\r\n    return <div className={s.profileCont}>\r\n        <img className={s.mainImage}\r\n             src=\"https://images.ctfassets.net/hrltx12pl8hq/4f6DfV5DbqaQUSw0uo0mWi/ff068ff5fc855601751499d694c0111a/shutterstock_376532611.jpg?fit=fill&w=800&h=300\"/>\r\n        <ProfileInfo/>\r\n        <MyPost/>\r\n        <PostWrapper/>\r\n    </div>;\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {\r\n    AppStateType,\r\n    ChangeMessageTextActionType,\r\n    SendMessageActionCreator,\r\n} from '../../redux/redux-store';\r\nimport {NavLink} from 'react-router-dom';\r\nimport User from '../Users/User';\r\nimport Message from './Message';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\nimport {DialogsReducerInitialStateType} from '../../redux/dialogs-reducer';\r\n\r\nconst DialogsContainer = () => {\r\n    return <SuperDialogsContainer/>\r\n};\r\n\r\nexport default DialogsContainer;\r\n\r\ntype DialogItemType = {\r\n    id: number\r\n    username: string\r\n}\r\nexport const DialogItem = (props: DialogItemType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.active} className={s.user}><User\r\n                name={props.username}/></NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype DialogsType = {\r\n    dialogsPage: DialogsReducerInitialStateType\r\n    sendMessage: () => void\r\n    updateNewMessageBody: (text: string) => void\r\n}\r\n\r\nexport const Dialogs = (props: DialogsType) => {\r\n    let messageValue = props.dialogsPage.newMessageText;\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value;\r\n        if (text) {\r\n            props.updateNewMessageBody(text);\r\n        }\r\n    };\r\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.key === 'Enter') {\r\n            sendMessageHandler();\r\n        }\r\n    };\r\n    const sendMessageHandler = () => {\r\n        props.sendMessage()\r\n    };\r\n\r\n    let disable = null;\r\n    if (!messageValue) {\r\n        disable = 'disable';\r\n    } else {\r\n        disable = null;\r\n    }\r\n    return <div className={s.dialogsContainer}>\r\n        <div className={s.dialogItem}>\r\n            <div className={s.dialogUsers}>\r\n                {props.dialogsPage.dialogs\r\n                    .map((t: DialogItemType) =>\r\n                        <DialogItem id={t.id}\r\n                                    username={t.username}/>)\r\n                }\r\n            </div>\r\n            <div className={s.dialogMessage}>\r\n                {props.dialogsPage.messages\r\n                    .map(m =>\r\n                        <Message message={m.message}/>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className={s.addMessage}>\r\n            <textarea onKeyPress={onKeyPressHandler} value={messageValue} onChange={onChangeHandler}/>\r\n            <button disabled={!!disable} onClick={sendMessageHandler}>Send</button>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch:Dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (text: string) => {\r\n            dispatch(ChangeMessageTextActionType(text));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(SendMessageActionCreator());\r\n        },\r\n    };\r\n};\r\n\r\n\r\nconst SuperDialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\n","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Profile from './components/Profile/Profile';\r\nimport {Route} from 'react-router-dom';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <Header/>\r\n            <Navbar/>\r\n            <div className=\"container-content\">\r\n                <Route path=\"/profile\" render={() =>\r\n                    <Profile/>}\r\n                />\r\n                <Route path=\"/dialogs\" render={() =>\r\n                    <DialogsContainer />}/>\r\n                <Route path=\"/music\" render={() => <Music/>}/>\r\n                <Route path=\"/settings\" render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nexport let rerenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <React.StrictMode>\r\n                    <App/>\r\n                </React.StrictMode>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrerenderEntireTree();\r\n\r\nstore.subscribe(rerenderEntireTree);\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCont\":\"Profile_profileCont__1XpQf\",\"mainImage\":\"Profile_mainImage__3IZQP\",\"profileInformation\":\"Profile_profileInformation__NgMD4\",\"profileImage\":\"Profile_profileImage__2MyN7\",\"person\":\"Profile_person__EqmtB\",\"personDescription\":\"Profile_personDescription__1KBzj\",\"posts\":\"Profile_posts__1EH8w\",\"newPost\":\"Profile_newPost__2-zcE\",\"usersPosts\":\"Profile_usersPosts__2eFIr\",\"postItem\":\"Profile_postItem__1HkXD\"};"],"sourceRoot":""}