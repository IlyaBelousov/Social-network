{"version":3,"sources":["Login/Login.module.css","components/Profile/Profile.module.css","components/Users/User.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.tsx","components/Profile/ProfileStatus.tsx","components/Profile/ProfileInfo.tsx","components/Profile/Posts/MyPost.tsx","components/Profile/Posts/AddPost.tsx","components/Users/User.tsx","components/Profile/Posts/Post.tsx","components/Profile/Posts/PostsWrapper.tsx","api/api.ts","redux/profile-reducer.ts","components/Profile/Profile.tsx","components/Dialogs/Message.tsx","redux/dialogs-reducer.ts","hoc/WithAuthRedirect.tsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/DialogsContainer.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","Preloader.gif","common/Preloader.tsx","components/Users/Users.tsx","redux/users-reducer.ts","components/Users/UsersContainer.tsx","redux/auth-reducer.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","Login/LoginForm.tsx","Login/Login.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Header/Header.module.css"],"names":["module","exports","Navbar","className","s","navbar","navbarItem","activeClassName","active","to","ProfileStatus","state","editMode","status","props","onStatusChange","e","setState","currentTarget","value","activateEditMode","deActivateEditMode","updateStatus","prevProps","prevState","this","console","log","onBlur","onDoubleClick","onChange","autoFocus","React","Component","ProfileInfo","memo","profileInformation","src","photo","profileImage","person","fullName","personDescription","lookingForAJobDescription","contacts","vk","MyPost","posts","AddPostReduxForm","reduxForm","form","Form","onSubmit","handleSubmit","Field","name","component","User","userBlock","userAvatar","photoUrl","alt","userName","Post","postItem","id","username","message","PostWrapper","AddNewPost","UsersPostContainer","AddNewPostForm","post","addPost","connect","profilePage","usersPosts","map","p","instance","axios","create","baseURL","withCredentials","headers","userAPI","currentPage","pageSize","get","then","response","data","delete","profileAPI","userId","put","authAPI","password","email","rememberMe","ADD_POST","CHANGE_NEW_POST_TEXT","SET_USER_PROFILE","SET_USER_STATUS","UPDATE_USER_STATUS","initialState","userProfile","aboutMe","github","facebook","website","twitter","instagram","lookingForAJob","photos","small","large","newPostText","SetUserStatus","type","Profile","match","params","SetUserProfileThunk","SetUserStatusThunk","profileCont","UpdateUserStatusThunk","ProfileContainer","compose","dispatch","profileData","resultCode","newPost","withRouter","Message","dialogs","messages","newMessageText","mapStateToProps","isAuth","auth","WithAuthRedirect","restProps","AddMessageReduxForm","addMessageForm","placeholder","DialogItem","dialog","user","m","DialogsContainer","dialogsPage","sendMessage","SendMessageActionCreator","dialogsContainer","t","addMessage","messageData","newMessageBody","Music","Settings","Preloader","preloader","Users","getUsersThunk","pageNumber","pagesCount","Math","ceil","totalCount","pages","i","push","onClick","onPageChanged","selected","isFetching","items","u","wrapper","container","usersBlock","followed","disabled","followInProgress","some","UnFollowThunk","userButton","FollowThunk","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOW_IN_PROGRESS","UsersInitialState","error","SetCurrentPage","SetToggleIsFetching","SetFollowInProgress","isFollow","UsersContainer","usersPage","userID","initialSate","setIsAuth","setAuthorization","login","payload","logOut","header","title","loginBlock","HeaderContainer","HeaderWithConnect","ReduxLoginForm","Login","setLogIn","loginContainer","formData","App","path","render","rootReducer","combineReducers","action","stateCopy","unshift","text","newMessage","filter","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.fc721a24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__1yyI-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCont\":\"Profile_profileCont__282v1\",\"profileInformation\":\"Profile_profileInformation__9j20V\",\"profileImage\":\"Profile_profileImage__YU2qd\",\"person\":\"Profile_person__3YMnH\",\"personDescription\":\"Profile_personDescription__2Ou8h\",\"posts\":\"Profile_posts__25p5D\",\"newPost\":\"Profile_newPost__25B-I\",\"usersPosts\":\"Profile_usersPosts__HF4dT\",\"postItem\":\"Profile_postItem__33fhb\",\"status\":\"Profile_status__cXvZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"User_userBlock__34HOG\",\"userAvatar\":\"User_userAvatar__1jk8D\",\"wrapper\":\"User_wrapper__1JSc2\",\"container\":\"User_container__RjGj_\",\"name\":\"User_name__1_sLq\",\"message\":\"User_message__3N4Kx\",\"time\":\"User_time__3B7zU\",\"status\":\"User_status__1TcCi\",\"country\":\"User_country__5LsA3\",\"city\":\"User_city__2fjxs\",\"location\":\"User_location__Q-u1U\",\"usersBlock\":\"User_usersBlock__1aWZy\",\"userButton\":\"User_userButton__18GUG\",\"pages\":\"User_pages__2j1O1\",\"selected\":\"User_selected__2KPpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2Q40x\",\"navbarItem\":\"Navbar_navbarItem__g2YWw\",\"active\":\"Navbar_active__1Wu5e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__14pbl\",\"dialog\":\"Dialogs_dialog__1ok7_\",\"messages\":\"Dialogs_messages__2eehb\",\"active\":\"Dialogs_active__AiEvf\",\"addMessageForm\":\"Dialogs_addMessageForm___lv2z\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className={s.navbar}>\r\n            <div  className={s.navbarItem}><NavLink activeClassName={s.active} to='/profile'>Profile</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/dialogs'>Dialogs</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/users'>Users</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/music'>Music</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/settings'>Settings</NavLink></div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, {ChangeEvent} from 'react';\r\nimport s from './Profile.module.css';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport class ProfileStatus extends React.Component <ProfileStatusPropsType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e) {\r\n            this.setState({\r\n                status: e.currentTarget.value\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        });\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.status);\r\n        return <div>\r\n            <div onBlur={this.deActivateEditMode} onDoubleClick={this.activateEditMode}>\r\n                {\r\n                    this.state.editMode\r\n                        ? <input onChange={this.onStatusChange} className={s.status} autoFocus={true}\r\n                                 value={this.state.status}/>\r\n                        : <span>{this.props.status}</span>\r\n                }\r\n            </div>\r\n\r\n        </div>;\r\n\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport {ProfileStatus} from './ProfileStatus';\r\n\r\ntype ProfileInfoPropsType = {\r\n    photo: string | undefined\r\n    contacts: {\r\n        github: string\r\n        facebook: string\r\n        website: string,\r\n        vk: string\r\n        twitter: string\r\n        instagram: string,\r\n    }\r\n    fullName: string\r\n    lookingForAJobDescription: string\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\nconst ProfileInfo = React.memo((props: ProfileInfoPropsType) => {\r\n    return (\r\n        <div className={s.profileInformation}>\r\n            <img src={props.photo}\r\n                 className={s.profileImage}/>\r\n\r\n            <div className={s.person}>\r\n                <h2 className={s.fullName}> {props.fullName}</h2>\r\n                <h4 className={s.personDescription}>{props.lookingForAJobDescription}</h4>\r\n                <h4 className={s.personDescription}>{props.contacts.vk}</h4>\r\n                <ProfileStatus updateStatus={props.updateStatus} status={props.status}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n})\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\n\r\nconst MyPost = () => {\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className=\"myPost\">\r\n                <h3>Hey</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\nimport {reduxForm, Field, InjectedFormProps, Form} from \"redux-form\";\r\n\r\n\r\n\r\nexport type AddPostFormData = {\r\n    addPost: string\r\n}\r\n\r\nexport const AddPost: React.FC<InjectedFormProps<AddPostFormData>> = (props) => {\r\n    return (\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <Field name={'addPost'} component={'textarea'}/>\r\n            <button>Add post</button>\r\n        </Form>\r\n    )\r\n};\r\nexport const AddPostReduxForm = reduxForm<AddPostFormData>({\r\n    form: 'addPostForm'\r\n})(AddPost)\r\n\r\n\r\n","import React from 'react';\r\nimport s from './User.module.css';\r\n\r\ntype UserPropsType = {\r\n    name: string\r\n    photoUrl: string | null\r\n    status?: string\r\n    id:number\r\n}\r\n\r\nconst User = (props: UserPropsType) => {\r\n    return (\r\n        <div className={s.userBlock}>\r\n            <div className={s.userAvatar}>\r\n                {\r\n                    props.photoUrl\r\n                        ? <img alt={'avatar'} src={props.photoUrl}/>\r\n                        : <img alt={'avatar'}\r\n                               src={'https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png'}/>\r\n                }\r\n            </div>\r\n            <div className={s.userName}>{props.name}</div>\r\n            <p className={s.status}>{props.status}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\nimport User from '../../Users/User';\r\ntype MessageType={\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\n\r\nconst Post = (props: MessageType) => {\r\n    return (\r\n        <div className={s.postItem}>\r\n            {\r\n                <User id={props.id} photoUrl={\"https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png\"} name={props.username}/>\r\n            }\r\n            {props.message}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import {AppStateType} from '../../../redux/redux-store';\r\nimport {AddPostFormData, AddPostReduxForm} from './AddPost';\r\nimport s from '../Profile.module.css';\r\nimport Post from './Post';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\ntype PostMessageType = {\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\ntype PostWrapperPropsType = {\r\n    AddNewPost: (newPost: string) => void\r\n}\r\nexport const PostWrapper = (props:PostWrapperPropsType) => {\r\n    return <div>\r\n        <AddNewPostForm AddNewPost={props.AddNewPost}/>\r\n        <UsersPostContainer/>\r\n    </div>;\r\n};\r\ntype UsersPostPropsType = {\r\n    post: Array<PostMessageType>\r\n}\r\nconst AddNewPostForm = (props:PostWrapperPropsType) => {\r\n    const onSubmit = (post: AddPostFormData) => {\r\n        props.AddNewPost(post.addPost)\r\n    }\r\n    return <AddPostReduxForm onSubmit={onSubmit}/>\r\n}\r\nexport const UsersPost = (props: UsersPostPropsType) => {\r\n    return <div className={s.usersPosts}>\r\n        {\r\n            props.post.map((p: PostMessageType) =>\r\n                <Post key={p.id} username={p.username}\r\n                      id={p.id}\r\n                      message={p.message}/>)\r\n        }\r\n    </div>;\r\n};\r\n\r\nconst UsersPostMapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        post: state.profilePage.post\r\n    };\r\n};\r\nconst UsersPostContainer = connect(UsersPostMapStateToProps)(UsersPost);","import axios from 'axios';\r\nimport {UserDataType} from '../redux/users-reducer';\r\n\r\nexport type AuthDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nexport interface IResponse<T> {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '4e9f6c7c-553d-4c3d-8aa0-0bbb01a71677'\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    GetUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<{ items: UserDataType[], totalCount: number }>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    Follow(id: number) {\r\n        return instance.post(`follow/${id}`);\r\n    },\r\n    UnFollow(id: number) {\r\n        return instance.delete(`follow/${id}`);\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    GetUserProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    GetUserStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    UpdateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status})\r\n    }\r\n};\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<IResponse<AuthDataType>>('auth/me');\r\n    },\r\n    logIn(password: string, email: string, rememberMe?: boolean) {\r\n        return instance.post<IResponse<{ userId: number }>>(`auth/login`, {password, email, rememberMe})\r\n    },\r\n    logOut() {\r\n        return instance.delete<IResponse<{}>>('auth/login')\r\n    }\r\n\r\n};\r\n\r\n\r\n","import {ActionsType} from './redux-store';\r\nimport {Dispatch} from 'redux';\r\nimport {profileAPI} from '../api/api';\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst CHANGE_NEW_POST_TEXT = 'CHANGE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\r\n\r\ntype PostType = { id: number, username: string, message: string }\r\nexport type PostsType = Array<PostType>\r\nexport type UserProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        github: string\r\n        facebook: string\r\n        website: string,\r\n        vk: string\r\n        twitter: string\r\n        instagram: string,\r\n    }\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    userId?: number | null\r\n    status: string\r\n}\r\n\r\ntype ProfileInitialStateType = {\r\n    post: PostsType\r\n    newPostText: string\r\n    userProfile: UserProfileType\r\n}\r\nlet initialState: ProfileInitialStateType = {\r\n    post: [\r\n        {id: 1, username: 'Liza', message: 'Hey! How are you?'},\r\n        {id: 2, username: 'Denchik', message: 'Hey! How are you?'},\r\n        {id: 3, username: 'Leo', message: 'Hey! How are you?'}\r\n    ],\r\n    userProfile: {\r\n        aboutMe: '',\r\n        contacts: {\r\n            github: '',\r\n            facebook: '',\r\n            website: '',\r\n            vk: '',\r\n            twitter: '',\r\n            instagram: '',\r\n        },\r\n        fullName: '',\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: '',\r\n        photos: {\r\n            small: '',\r\n            large: '',\r\n        },\r\n        userId: null,\r\n        status: ''\r\n    },\r\n    newPostText: ''\r\n};\r\nexport const ProfileReducer = (state = initialState, action: ActionsType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST : {\r\n            let stateCopy = {...state, post: [...state.post]};\r\n            let newPost = {id: 6, message: action.newPost, username: 'Htoto'};\r\n            stateCopy.post.unshift(newPost);\r\n            return {...stateCopy};\r\n\r\n        }\r\n\r\n        case CHANGE_NEW_POST_TEXT: {\r\n            let stateCopy = {...state};\r\n            stateCopy.newPostText = action.text;\r\n            return {...stateCopy};\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...action.profileData}\r\n            };\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...state.userProfile, status: action.status}\r\n            };\r\n        }\r\n        case UPDATE_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...state.userProfile, status: action.status}\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const AddNewPost = (newPost:string) => {\r\n    return {type: ADD_POST,newPost} as const;\r\n};\r\nexport const ChangeNewPostTextActionCreator = (text: string) => {\r\n    return {type: CHANGE_NEW_POST_TEXT, text} as const;\r\n};\r\nexport const SetUserProfileActionCreator = (profileData: UserProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profileData\r\n    } as const;\r\n};\r\nexport const SetUserStatus = (status: string) => {\r\n    return {\r\n        type: SET_USER_STATUS,\r\n        status,\r\n    } as const;\r\n};\r\nexport const UpdateUserStatus = (status: string) => {\r\n    return {\r\n        type: UPDATE_USER_STATUS,\r\n        status,\r\n    } as const;\r\n};\r\n\r\nexport const SetUserProfileThunk = (userId: number) => (dispatch: Dispatch) => {\r\n    profileAPI.GetUserProfile(userId)\r\n        .then(response => {\r\n            dispatch(SetUserProfileActionCreator(response.data));\r\n        });\r\n    profileAPI.GetUserStatus(userId)\r\n        .then(response => {\r\n            dispatch(SetUserStatus(response.data));\r\n        });\r\n};\r\nexport const SetUserStatusThunk = (userId: number) => (dispatch: Dispatch) => {\r\n    profileAPI.GetUserStatus(userId)\r\n        .then(response => {\r\n            dispatch(SetUserStatus(response.data));\r\n        });\r\n};\r\nexport const UpdateUserStatusThunk = (status: string) => (dispatch: Dispatch) => {\r\n    profileAPI.UpdateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(SetUserStatus(status));\r\n            }\r\n        });\r\n};\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport MyPost from './Posts/MyPost';\r\nimport {PostWrapper} from './Posts/PostsWrapper';\r\nimport {\r\n    AddNewPost,\r\n    SetUserProfileThunk,\r\n    SetUserStatusThunk,\r\n    UpdateUserStatusThunk,\r\n    UserProfileType\r\n} from '../../redux/profile-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {connect} from 'react-redux';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string | undefined\r\n}\r\nexport type MapDispatchToPropsType = {\r\n    SetUserProfileThunk: (userId: number) => void\r\n    SetUserStatusThunk: (userId: number) => void\r\n    UpdateUserStatusThunk: (status: string) => void\r\n    AddNewPost: (newPost: string) => void\r\n}\r\ntype ProfileMapStateToPropsType = {\r\n\r\n    userProfile: UserProfileType\r\n    contacts: {\r\n        github: string\r\n        facebook: string\r\n        website: string,\r\n        vk: string\r\n        twitter: string\r\n        instagram: string,\r\n    }\r\n    fullName: string\r\n    lookingForAJobDescription: string\r\n    status: string\r\n}\r\n\r\n\r\ntype PropsType = ProfileMapStateToPropsType & MapDispatchToPropsType\r\ntype ProfilePropsType = RouteComponentProps<PathParamsType> & PropsType\r\n\r\nexport class Profile extends React.Component<ProfilePropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = '2';\r\n        }\r\n        this.props.SetUserProfileThunk(+userId);\r\n        this.props.SetUserStatusThunk(+userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div className={s.profileCont}>\r\n            <ProfileInfo\r\n                updateStatus={this.props.UpdateUserStatusThunk}\r\n                status={this.props.status}\r\n                fullName={this.props.fullName}\r\n                lookingForAJobDescription={this.props.lookingForAJobDescription}\r\n                contacts={this.props.contacts}\r\n                photo={this.props.userProfile.photos.small ? this.props.userProfile.photos.small : 'https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png'}/>\r\n            <MyPost/>\r\n            <PostWrapper AddNewPost={this.props.AddNewPost}/>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType): ProfileMapStateToPropsType => {\r\n    return {\r\n\r\n        userProfile: state.profilePage.userProfile,\r\n        contacts: state.profilePage.userProfile.contacts,\r\n        fullName: state.profilePage.userProfile.fullName,\r\n        lookingForAJobDescription: state.profilePage.userProfile.lookingForAJobDescription,\r\n        status: state.profilePage.userProfile.status\r\n    };\r\n};\r\n\r\n\r\nexport const ProfileContainer = compose<React.ComponentType>(\r\n    connect(MapStateToProps, {SetUserProfileThunk, SetUserStatusThunk, UpdateUserStatusThunk, AddNewPost}),\r\n    withRouter,\r\n)(Profile);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import {ActionsType} from './redux-store';\r\n\r\nexport type DialogsReducerInitialStateType = {\r\n    dialogs: Array<UserType>\r\n    newMessageText: string\r\n}\r\nexport type UserType = { id: number, username: string, messages: MessageType[] }\r\nexport type MessageType = { id: number, message: string }\r\n\r\nlet initialState: DialogsReducerInitialStateType = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            username: 'Liza',\r\n            messages: [\r\n                {id: 1, message: 'Hey'},\r\n                {id: 2, message: 'Hey'},\r\n                {id: 3, message: 'Hey'},\r\n                {id: 4, message: 'Hey'}\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            username: 'Denchik',\r\n            messages: [\r\n                {id: 1, message: 'Hey'},\r\n                {id: 2, message: 'Hey'},\r\n                {id: 3, message: 'Hey'},\r\n                {id: 4, message: 'Hey'}\r\n            ],\r\n        },\r\n        {\r\n            id: 3,\r\n            username: 'Leo',\r\n            messages: [\r\n                {id: 1, message: 'Hey'},\r\n                {id: 2, message: 'Hey'},\r\n                {id: 3, message: 'Hey'},\r\n                {id: 4, message: 'Hey'}\r\n            ],\r\n        },\r\n\r\n    ],\r\n\r\n    newMessageText: ''\r\n};\r\nexport const DialogsReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE': {\r\n            let stateCopy = {...state, dialogs: [...state.dialogs]}\r\n            let newMessage = {id: 3, message: action.message};\r\n            stateCopy.dialogs.map(m => m.id === newMessage.id\r\n                ? m.messages.push(newMessage)\r\n                : m\r\n            )\r\n            return {...stateCopy};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const SendMessageActionCreator = (message: string) => {\r\n    return {type: 'SEND-MESSAGE', message} as const;\r\n};\r\n","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nexport function WithAuthRedirect(Component: ComponentType) {\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props;\r\n        if (!isAuth) return <Redirect to={'/login'}/>;\r\n        return <Component {...restProps}/>;\r\n    };\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {Field, Form, InjectedFormProps, reduxForm} from \"redux-form\";\r\n\r\nexport type AddMessageDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nexport const AddMessageForm: React.FC<InjectedFormProps<AddMessageDataType>> = (props) => {\r\n    return (\r\n        <Form className={s.addMessageForm} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                placeholder={'Enter your message'}\r\n                component={'textarea'}\r\n                name={'newMessageBody'}/>\r\n            <button>Send</button>\r\n        </Form>\r\n    );\r\n};\r\nexport const AddMessageReduxForm = reduxForm<AddMessageDataType>({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {\r\n    AppStateType\r\n} from '../../redux/redux-store';\r\nimport {NavLink} from 'react-router-dom';\r\nimport User from '../Users/User';\r\nimport Message from './Message';\r\nimport {connect} from 'react-redux';\r\nimport {compose, Dispatch} from 'redux';\r\nimport {\r\n    DialogsReducerInitialStateType, MessageType,\r\n    SendMessageActionCreator\r\n} from '../../redux/dialogs-reducer';\r\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect';\r\nimport {AddMessageDataType, AddMessageReduxForm} from \"./AddMessageForm\";\r\n\r\ntype DialogsType = {\r\n        sendMessage: (message: string) => void,\r\n        updateNewMessageBody: (text: string) => void\r\n    }\r\n    & DialogsMapStateToPropsType\r\ntype DialogsMapStateToPropsType = {\r\n    dialogsPage: DialogsReducerInitialStateType\r\n}\r\n\r\n\r\nconst MapStateToProps = (state: AppStateType): DialogsMapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        sendMessage: (message: string) => {\r\n            dispatch(SendMessageActionCreator(message));\r\n        },\r\n    };\r\n};\r\n\r\n\r\ntype DialogItemType = {\r\n    id: number\r\n    username: string\r\n    messages?: MessageType[]\r\n}\r\nexport const DialogItem = (props: DialogItemType) => {\r\n    return <div className={s.dialog}>\r\n        <NavLink to={'/dialogs/' + props.id} activeClassName={s.active} className={s.user}>\r\n            <User\r\n                key={props.id}\r\n                id={props.id}\r\n                photoUrl={'https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png'}\r\n                name={props.username}\r\n            /></NavLink>\r\n        <div className={s.messages}>\r\n            {\r\n                props.messages?.map(m => <Message message={m.message}/>)\r\n            }\r\n        </div>\r\n    </div>\r\n\r\n};\r\n\r\n\r\nexport const Dialogs = (props: DialogsType) => {\r\n    const onSubmit = (messageData: AddMessageDataType) => {\r\n        props.sendMessage(messageData.newMessageBody);\r\n    }\r\n    return <div className={s.dialogsContainer}>\r\n        {props.dialogsPage.dialogs\r\n            .map((t: DialogItemType) => <DialogItem key={t.id} id={t.id}\r\n                                                    username={t.username}\r\n                                                    messages={t.messages}\r\n            />)\r\n        }\r\n        <div className={s.addMessage}>\r\n            <AddMessageReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(\r\n    connect(MapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect,\r\n)(Dialogs);\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/Preloader.cef7eb40.gif\";","import React from 'react';\r\nimport preloader from '../Preloader.gif';\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <img alt={'icon'} src={preloader}/>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport User from './User';\r\nimport s from './User.module.css';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {\r\n    UserDataType\r\n} from '../../redux/users-reducer';\r\nimport {Preloader} from '../../common/Preloader';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\ntype UsersPropsType = UsersMapStateToPropsType & UsersMapDispatchToPropsType\r\n\r\ntype UsersMapStateToPropsType = {\r\n    items: Array<UserDataType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followInProgress: number[]\r\n}\r\ntype UsersMapDispatchToPropsType = {\r\n    FollowThunk: (id: number) => void\r\n    UnFollowThunk: (id: number) => void\r\n    getUsersThunk: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport class Users extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {pages.map(p => {\r\n                        return <span\r\n                            onClick={() => {\r\n                                this.onPageChanged(p);\r\n                            }}\r\n                            className={(this.props.currentPage === p\r\n                                ? s.selected\r\n                                : s.pages)}>{p}</span>;\r\n                    })}\r\n                </div>\r\n                {this.props.isFetching && <Preloader/>}\r\n                {\r\n                    this.props.items.map(u => {\r\n                        return (\r\n                            <div key={u.id} className={s.wrapper}>\r\n                                <div className={s.container}>\r\n                                    <div className={s.usersBlock}>\r\n                                        <NavLink to={`/profile/${u.id}`}>\r\n                                            <User key={u.id}\r\n                                                  name={u.name}\r\n                                                  photoUrl={u.photos.large}\r\n                                                  status={u.status}\r\n                                                  id={u.id}\r\n                                            />\r\n                                        </NavLink>\r\n\r\n                                        <div>\r\n                                            {u.followed ?\r\n                                                <button disabled={this.props.followInProgress.some(id => id === u.id)}\r\n                                                        onClick={() => this.props.UnFollowThunk(u.id)}\r\n                                                        className={s.userButton}>UNFOLLOW</button>\r\n\r\n                                                : <button disabled={this.props.followInProgress.some(id => id === u.id)}\r\n                                                          onClick={() => this.props.FollowThunk(u.id)}\r\n                                                          className={s.userButton}>FOLLOW</button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>);\r\n                    })}\r\n            </div>);\r\n    }\r\n}\r\n\r\n\r\nexport const UsersMapStateToProps = (state: AppStateType): UsersMapStateToPropsType => {\r\n    return {\r\n        items: state.usersPage.items,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followInProgress: state.usersPage.followInProgress,\r\n    };\r\n};\r\n","import {ActionsType} from './redux-store';\r\nimport {userAPI} from '../api/api';\r\nimport {Dispatch} from 'redux';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst FOLLOW_IN_PROGRESS = 'FOLLOW_IN_PROGRESS';\r\n\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserStateType = {\r\n    items: Array<UserDataType>\r\n    totalCount: number\r\n    error: null | string\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followInProgress: number[]\r\n\r\n}\r\n\r\nexport type UserDataType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    photos: PhotosType\r\n    status: string\r\n}\r\n\r\nlet UsersInitialState: UserStateType = {\r\n    items: [],\r\n    totalCount: 0,\r\n    error: null,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followInProgress: [],\r\n};\r\n\r\nexport const UsersReducer = (state = UsersInitialState, action: ActionsType): UserStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followInProgress: action.isFollow\r\n                    ? [...state.followInProgress, action.id]\r\n                    : [...state.followInProgress.filter(id => id !== action.id)],\r\n            };\r\n        }\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, items: action.items};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalCount: action.totalCount};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const FollowActionCreator = (userID: number) => {\r\n    return {type: FOLLOW, userID} as const;\r\n};\r\nexport const UnFollowActionCreator = (userID: number) => {\r\n    return {type: UNFOLLOW, userID} as const;\r\n};\r\n\r\nexport const SetUsers = (items: Array<UserDataType>) => {\r\n    return {type: SET_USERS, items} as const;\r\n};\r\nexport const SetCurrentPage = (currentPage: number) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage} as const;\r\n};\r\nexport const SetTotalUsersCount = (totalCount: number) => {\r\n    return {type: SET_TOTAL_USERS_COUNT, totalCount} as const;\r\n};\r\nexport const SetToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const;\r\n};\r\nexport const SetFollowInProgress = (isFollow: boolean, id: number) => {\r\n    return {\r\n        type: FOLLOW_IN_PROGRESS,\r\n        isFollow,\r\n        id,\r\n    } as const;\r\n};\r\nexport const getUsersThunk = (currentPage: number, pageSize: number) => (dispatch: Dispatch) => {\r\n    dispatch(SetToggleIsFetching(true));\r\n    userAPI.GetUsers(currentPage, pageSize)\r\n        .then(response => {\r\n            dispatch(SetToggleIsFetching(false));\r\n            dispatch(SetUsers(response.items));\r\n            dispatch(SetTotalUsersCount(500));\r\n            dispatch(SetCurrentPage(currentPage));\r\n        });\r\n};\r\nexport const UnFollowThunk = (id: number) => (dispatch: Dispatch) => {\r\n    dispatch(SetFollowInProgress(true, id));\r\n    userAPI.UnFollow(id)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(UnFollowActionCreator(id));\r\n            }\r\n            dispatch(SetFollowInProgress(false, id));\r\n        });\r\n};\r\nexport const FollowThunk = (id: number) => (dispatch: Dispatch) => {\r\n    dispatch(SetFollowInProgress(true, id));\r\n    userAPI.Follow(id)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(FollowActionCreator(id));\r\n            }\r\n            dispatch(SetFollowInProgress(false, id));\r\n        });\r\n};","import {connect} from 'react-redux';\r\nimport {Users, UsersMapStateToProps} from './Users';\r\nimport {\r\n    SetCurrentPage, getUsersThunk, FollowThunk, UnFollowThunk\r\n} from '../../redux/users-reducer';\r\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport React from 'react';\r\n\r\n\r\nexport const UsersContainer = compose<React.ComponentType>(\r\n    connect(UsersMapStateToProps, {\r\n        FollowThunk,\r\n        UnFollowThunk,\r\n        SetCurrentPage,\r\n        getUsersThunk,\r\n    }),\r\n    WithAuthRedirect\r\n)(Users);","import {authAPI, AuthDataType} from \"../api/api\";\r\nimport {Action, Dispatch} from \"redux\";\r\nimport {ActionsType, AppStateType} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\n\r\nconst initialSate = {\r\n    isAuth: false,\r\n    data: {} as AuthDataType\r\n}\r\ntype authInitialStateType = typeof initialSate\r\nexport const authReducer = (state: authInitialStateType = initialSate, action: ActionsType): authInitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET_AUTH_DATA': {\r\n            return {\r\n                ...state,\r\n                data: {...action.payload}\r\n            }\r\n        }\r\n        case 'AUTH/SET_IS_AUTH': {\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n//actions\r\nexport const setAuthData = (id: number, email: string, login: string) => {\r\n    return {\r\n        type: 'AUTH/SET_AUTH_DATA',\r\n        payload: {\r\n            id,\r\n            email,\r\n            login\r\n        }\r\n    } as const\r\n}\r\nexport const setIsAuth = (isAuth: boolean) => {\r\n    return {\r\n        type: 'AUTH/SET_IS_AUTH',\r\n        isAuth\r\n    } as const\r\n}\r\nexport type AuthActionsType =\r\n    ReturnType<typeof setAuthData>\r\n    | ReturnType<typeof setIsAuth>\r\n\r\n//thunk\r\nexport const setAuthorization = () => (dispatch: Dispatch) => {\r\n    authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthData(response.data.data.id, response.data.data.email, response.data.data.login))\r\n                dispatch(setIsAuth(true))\r\n            } else {\r\n                dispatch(setIsAuth(false))\r\n            }\r\n        })\r\n}\r\nexport const setLogIn =\r\n    (password: string, email: string, rememberMe?: boolean)\r\n        : ThunkAction<void, AppStateType, unknown, Action<AuthActionsType>> =>\r\n        (dispatch) => {\r\n    authAPI.logIn(password, email, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthorization())\r\n            }\r\n        })\r\n}\r\nexport const logOut = () => (dispatch: Dispatch) => {\r\n    authAPI.logOut()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setIsAuth(false))\r\n            }\r\n        })\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {logOut} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\ntype MapDispatchToPropsType = {\r\n    logOut: () => void\r\n}\r\n\r\ntype PropsType = {\r\n    login?: string | undefined\r\n    isAuth: boolean\r\n} & MapDispatchToPropsType\r\n\r\nfunction Header(props: PropsType) {\r\n    const onLogOutHandler = () => {\r\n        props.logOut()\r\n    }\r\n    return (\r\n        <header className={s.header}>\r\n            <h2 className={s.title}>Social Network</h2>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth && props.login}\r\n                {props.isAuth ? <button onClick={onLogOutHandler}>LogOut</button> :\r\n                    <NavLink to={'/login'}>\r\n                        <button>LogIn</button>\r\n                    </NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default connect(null, {logOut})(Header)","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {setAuthorization} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | undefined\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setAuthorization: () => void\r\n}\r\ntype HeaderPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport class HeaderContainer extends React.Component<HeaderPropsType> {\r\n    componentDidMount() {\r\n        this.props.setAuthorization()\r\n    }\r\n\r\n    render() {\r\n        return <Header\r\n            isAuth={this.props.isAuth}\r\n            login={this.props.login}/>\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        login: state.auth.data.login,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\n\r\nexport const HeaderWithConnect = connect(MapStateToProps, {setAuthorization})(HeaderContainer);","import React from 'react';\r\nimport {Field, Form, InjectedFormProps, reduxForm} from 'redux-form';\r\n\r\nexport type FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return <Form onSubmit={props.handleSubmit}>\r\n            <div><Field name={'login'} placeholder={'Login'} component={'input'}/></div>\r\n            <div><Field name={'password'} placeholder={'Password'} component={'input'} type={'password'}/></div>\r\n            <div><Field name={'rememberMe'} component={'input'} type=\"checkbox\"/> remember me</div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </Form>\r\n\r\n};\r\nexport const ReduxLoginForm = reduxForm<FormDataType>({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport {FormDataType, ReduxLoginForm} from './LoginForm';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {setLogIn} from \"../redux/auth-reducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setLogIn: (password: string, email: string, rememberMe?: boolean) => void\r\n}\r\nconst LoginContainer = (props: MapDispatchToPropsType & MapStateToPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.setLogIn(formData.password, formData.login, formData.rememberMe)\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div className={s.loginContainer}>\r\n        <h1>Login</h1>\r\n        <ReduxLoginForm onSubmit={onSubmit}/>\r\n    </div>;\r\n};\r\nconst MapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const Login = connect(MapStateToProps, {setLogIn})(LoginContainer)\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {ProfileContainer} from './components/Profile/Profile';\r\nimport {Route} from 'react-router-dom';\r\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport {UsersContainer} from './components/Users/UsersContainer';\r\nimport {HeaderWithConnect} from './components/Header/HeaderContainer';\r\nimport {Login} from './Login/Login';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"container\">\r\n            <HeaderWithConnect/>\r\n            <Navbar/>\r\n            <div className=\"container-content\">\r\n                <Route path=\"/profile/:userId?\" render={() =>\r\n                    <ProfileContainer/>}\r\n                />\r\n                <Route path=\"/dialogs\" render={() =>\r\n                    <DialogsContainer/>}/>\r\n                <Route path=\"/users\" render={() =>\r\n                    <UsersContainer/>}/>\r\n                <Route path=\"/music\" render={() => <Music/>}/>\r\n                <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                <Route path=\"/login\" render={() => <Login/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {\r\n    AddNewPost,\r\n    ChangeNewPostTextActionCreator,\r\n    ProfileReducer,\r\n    SetUserProfileActionCreator, SetUserStatus, UpdateUserStatus\r\n} from './profile-reducer';\r\nimport {DialogsReducer, SendMessageActionCreator} from './dialogs-reducer';\r\nimport {\r\n    FollowActionCreator, SetFollowInProgress,\r\n    SetCurrentPage,\r\n    SetToggleIsFetching, SetTotalUsersCount, SetUsers,\r\n    UsersReducer, UnFollowActionCreator,\r\n} from './users-reducer';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport {AuthActionsType, authReducer} from \"./auth-reducer\";\r\n\r\nexport type ActionsType = ProfileActionType\r\n    | DialogsActionType\r\n    | UsersActionType\r\n    | AuthActionsType\r\n\r\n\r\nexport type ProfileActionType =\r\n    ReturnType<typeof AddNewPost>\r\n    | ReturnType<typeof ChangeNewPostTextActionCreator>\r\n    | ReturnType<typeof SetUserProfileActionCreator>\r\nexport type DialogsActionType =\r\n    ReturnType<typeof SendMessageActionCreator>\r\n    | ReturnType<typeof SetUserStatus>\r\n    | ReturnType<typeof UpdateUserStatus>\r\n\r\n\r\nexport type UsersActionType =\r\n    ReturnType<typeof FollowActionCreator>\r\n    | ReturnType<typeof SetUsers>\r\n    | ReturnType<typeof SetCurrentPage>\r\n    | ReturnType<typeof SetTotalUsersCount>\r\n    | ReturnType<typeof SetToggleIsFetching>\r\n    | ReturnType<typeof UnFollowActionCreator>\r\n    | ReturnType<typeof SetFollowInProgress>\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    dialogsPage: DialogsReducer,\r\n    usersPage: UsersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <React.StrictMode>\r\n            <BrowserRouter basename={'/Social-network'}>\r\n                <App/>\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__qWTgY\",\"title\":\"Header_title__1el5e\",\"loginBlock\":\"Header_loginBlock__2xN8c\"};"],"sourceRoot":""}