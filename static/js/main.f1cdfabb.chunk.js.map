{"version":3,"sources":["components/Users/User.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo.tsx","components/Profile/Posts/MyPost.tsx","components/Profile/Posts/AddPost.tsx","components/Users/User.tsx","components/Profile/Posts/Post.tsx","redux/profile-reducer.ts","components/Profile/Posts/PostsWrapper.tsx","components/Profile/Profile.tsx","components/Dialogs/Message.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogsContainer.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/users-reducer.ts","components/Users/Users.tsx","components/Users/UsersContainer.tsx","App.tsx","redux/redux-store.ts","index.tsx"],"names":["module","exports","Header","className","s","header","src","Navbar","navbar","navbarItem","activeClassName","active","to","ProfileInfo","profileInformation","profileImage","person","personDescription","MyPost","posts","AddPost","props","createPost","newPost","onKeyPress","event","key","value","newPostText","onChange","e","text","currentTarget","updateNewPostText","onClick","User","userBlock","userAvatar","photoUrl","alt","userName","name","status","Post","postItem","username","message","initialState","post","id","PostWrapper","SuperPostWrapper","UsersPostContainer","connect","state","profilePage","dispatch","type","newText","ChangeNewPostTextActionCreator","usersPosts","map","p","Profile","profileCont","mainImage","Message","dialogs","messages","newMessageText","DialogsContainer","SuperDialogsContainer","DialogItem","dialog","user","dialogsPage","updateNewMessageBody","newMessage","ChangeMessageTextActionType","sendMessage","messageValue","sendMessageHandler","disable","dialogsContainer","dialogItem","dialogUsers","t","dialogMessage","m","addMessage","disabled","Music","Settings","FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","UsersInitialState","items","totalCount","error","pageSize","currentPage","Users","axios","get","this","then","response","setUsers","data","setTotalUsersCount","pageNumber","setCurrentPage","pagesCount","Math","ceil","pages","i","push","onPageChanged","selected","u","wrapper","container","usersBlock","photos","large","follow","userButton","followed","React","Component","UsersContainer","usersPage","userID","FollowAC","SetUsersAC","SetCurrentPageAC","SetTotalUsersCountAC","App","path","render","rootReducer","combineReducers","action","stateCopy","newPostMessage","unshift","body","store","createStore","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.f1cdfabb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"User_userBlock__iHGZn\",\"userAvatar\":\"User_userAvatar__1mUJh\",\"wrapper\":\"User_wrapper__1xyD2\",\"container\":\"User_container__QsORz\",\"name\":\"User_name__1WxGk\",\"message\":\"User_message__2kgIm\",\"time\":\"User_time__3u5g-\",\"status\":\"User_status__2E5gi\",\"country\":\"User_country__3cx8I\",\"city\":\"User_city__3f8B_\",\"location\":\"User_location__GFz2A\",\"usersBlock\":\"User_usersBlock__-p0BH\",\"userButton\":\"User_userButton__10JWE\",\"pages\":\"User_pages__3dHIx\",\"selected\":\"User_selected__2smQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__Tbgap\",\"navbarItem\":\"Navbar_navbarItem__1KNZm\",\"active\":\"Navbar_active__3Rtia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__g5GY1\",\"dialogItem\":\"Dialogs_dialogItem__3pe_B\",\"addMessage\":\"Dialogs_addMessage__p1aZo\",\"dialog\":\"Dialogs_dialog__1wG-_\",\"dialogUsers\":\"Dialogs_dialogUsers__3nt6_\",\"user\":\"Dialogs_user__3pi0y\",\"dialogMessage\":\"Dialogs_dialogMessage__2bZ3C\",\"active\":\"Dialogs_active__12afm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1n4f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCont\":\"Profile_profileCont__1XpQf\",\"mainImage\":\"Profile_mainImage__3IZQP\",\"profileInformation\":\"Profile_profileInformation__NgMD4\",\"profileImage\":\"Profile_profileImage__2MyN7\",\"person\":\"Profile_person__EqmtB\",\"personDescription\":\"Profile_personDescription__1KBzj\",\"posts\":\"Profile_posts__1EH8w\",\"newPost\":\"Profile_newPost__2-zcE\",\"usersPosts\":\"Profile_usersPosts__2eFIr\",\"postItem\":\"Profile_postItem__1HkXD\"};","import React from 'react';\r\nimport s from './Header.module.css';\r\nfunction Header() {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://i.pinimg.com/originals/5f/53/5a/5f535aa08b3230f893f2a68e74eebf44.png' />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className={s.navbar}>\r\n            <div  className={s.navbarItem}><NavLink activeClassName={s.active} to='/profile'>Profile</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/dialogs'>Dialogs</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/users'>Users</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/music'>Music</NavLink></div>\r\n            <div className={s.navbarItem}><NavLink activeClassName={s.active} to='/settings'>Settings</NavLink></div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={s.profileInformation}>\r\n            <img src=\"https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png\"\r\n                 className={s.profileImage}/>\r\n\r\n            <div className={s.person}>\r\n                <div className={s.personDescription}> Ilya</div>\r\n                <div className={s.personDescription}> 26 y.o.</div>\r\n                <div className={s.personDescription}>Saint-Petersburg</div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\n\r\nconst MyPost = () => {\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className=\"myPost\">\r\n                <h3>Hey</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPost;","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\ntype AddPostType = {\r\n    newPostText: string\r\n    updateNewPostText: (text: string) => void\r\n    createPost: () => void\r\n}\r\n\r\nconst AddPost = (props: AddPostType) => {\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let text = e.currentTarget.value;\r\n        if (text) {\r\n            props.updateNewPostText(text);\r\n        }\r\n    };\r\n\r\n    let createPost = () => {\r\n        props.createPost()\r\n    };\r\n\r\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            createPost();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.newPost}>\r\n            <input onKeyPress={onKeyPressHandler} value={props.newPostText} onChange={onChangeHandler}/>\r\n            <button onClick={createPost}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPost;","import React from 'react';\r\nimport s from './User.module.css';\r\n\r\ntype UserPropsType = {\r\n    name: string\r\n    photoUrl: string | null\r\n    status?: string\r\n}\r\n\r\nconst User = (props: UserPropsType) => {\r\n    return (\r\n        <div className={s.userBlock}>\r\n            <div className={s.userAvatar}>\r\n                {\r\n                    props.photoUrl ?\r\n                        <img alt={'avatar'} src={props.photoUrl}/>\r\n                        : <img alt={'avatar'}\r\n                               src={'https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png'}/>\r\n                }\r\n            </div>\r\n            <div className={s.userName}>{props.name}</div>\r\n            <p className={s.status}>{props.status}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\nimport User from '../../Users/User';\r\ntype MessageType={\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\n\r\nconst Post = (props: MessageType) => {\r\n    return (\r\n        <div className={s.postItem}>\r\n            {\r\n                <User photoUrl={\"https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png\"} name={props.username}/>\r\n            }\r\n            {props.message}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import {ActionsType} from './redux-store';\r\n\r\ntype PostType = { id: number, username: string, message: string }\r\nexport type PostsType = Array<PostType>\r\n\r\ntype InitialStatePostType = {\r\n        post: PostsType\r\n        newPostText: string\r\n}\r\nlet initialState: InitialStatePostType = {\r\n        post: [\r\n            {id: 1, username: 'Liza', message: 'Hey! How are you?'},\r\n            {id: 2, username: 'Denchik', message: 'Hey! How are you?'},\r\n            {id: 3, username: 'Leo', message: 'Hey! How are you?'}\r\n        ],\r\n        newPostText: ''\r\n};\r\nexport const ProfileReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST' : {\r\n            let stateCopy = {...state,post:[...state.post]}\r\n            let newPostMessage = stateCopy.newPostText;\r\n            let newPost = {id: 6, message: newPostMessage, username: 'Htoto'};\r\n            stateCopy.post.unshift(newPost);\r\n            stateCopy.newPostText = '';\r\n            return {...stateCopy}\r\n\r\n        }\r\n\r\n        case 'CHANGE-NEW-POST-TEXT': {\r\n            let stateCopy = {...state}\r\n            stateCopy.newPostText = action.newText;\r\n            return {...stateCopy};\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const AddNewPostActionCreator = () => {\r\n    return {type: 'ADD-POST'} as const;\r\n};\r\nexport const ChangeNewPostTextActionCreator = (text: string) => {\r\n    return {type: 'CHANGE-NEW-POST-TEXT', newText: text} as const;\r\n};","import {AppStateType} from '../../../redux/redux-store';\r\nimport AddPost from './AddPost';\r\nimport s from '../Profile.module.css';\r\nimport Post from './Post';\r\nimport React from 'react';\r\nimport {Dispatch} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {AddNewPostActionCreator, ChangeNewPostTextActionCreator} from '../../../redux/profile-reducer';\r\n\r\ntype PostMessageType = {\r\n    id: number\r\n    username: string\r\n    message: string\r\n}\r\nexport const PostWrapper = () => {\r\n    return <div>\r\n        <SuperPostWrapper/>\r\n        <UsersPostContainer/>\r\n    </div>;\r\n};\r\ntype UsersPostPropsType = {\r\n    post:Array<PostMessageType>\r\n}\r\n\r\nexport const UsersPost = (props: UsersPostPropsType) => {\r\n    return <div className={s.usersPosts}>\r\n        {\r\n            props.post.map((p: PostMessageType) =>\r\n                <Post username={p.username}\r\n                      id={p.id}\r\n                      message={p.message}/>)\r\n        }\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        createPost: () => {\r\n            dispatch(AddNewPostActionCreator());\r\n        },\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(ChangeNewPostTextActionCreator(text));\r\n        }\r\n    };\r\n};\r\nconst SuperPostWrapper = connect(mapStateToProps, mapDispatchToProps)(AddPost);\r\nconst UsersPostMapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        post: state.profilePage.post\r\n    };\r\n};\r\nconst UsersPostContainer = connect(UsersPostMapStateToProps)(UsersPost);","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport MyPost from './Posts/MyPost';\r\nimport {PostWrapper} from './Posts/PostsWrapper';\r\n\r\nfunction Profile() {\r\n    return <div className={s.profileCont}>\r\n        <img className={s.mainImage}\r\n             src=\"https://images.ctfassets.net/hrltx12pl8hq/4f6DfV5DbqaQUSw0uo0mWi/ff068ff5fc855601751499d694c0111a/shutterstock_376532611.jpg?fit=fill&w=800&h=300\"/>\r\n        <ProfileInfo/>\r\n        <MyPost/>\r\n        <PostWrapper/>\r\n    </div>;\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import {ActionsType} from './redux-store';\r\nexport type DialogsReducerInitialStateType={\r\n    dialogs: Array<UserType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\ntype UserType={id: number, username: string}\r\ntype MessageType={id: number, message: string}\r\n\r\nlet initialState:DialogsReducerInitialStateType = {\r\n    dialogs: [\r\n        {id: 1, username: 'Liza'},\r\n        {id: 2, username: 'Denchik'},\r\n        {id: 3, username: 'Leo'},\r\n        {id: 4, username: 'Brodiyagi'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hey'},\r\n        {id: 2, message: 'Hey'},\r\n        {id: 3, message: 'Hey'},\r\n        {id: 4, message: 'Hey'}\r\n    ],\r\n    newMessageText: ''\r\n};\r\nexport const DialogsReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE': {\r\n            let stateCopy={...state,dialogs:[...state.dialogs],messages:[...state.messages]}\r\n            let body = stateCopy.newMessageText;\r\n            let newMessage = {id: 6, message: body};\r\n            stateCopy.newMessageText = '';\r\n            stateCopy.messages.push(newMessage);\r\n            return {...stateCopy};\r\n        }\r\n        case 'CHANGE-MESSAGE-TEXT': {\r\n            let stateCopy={...state}\r\n            stateCopy.newMessageText = action.newMessage;\r\n            return {...stateCopy};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const SendMessageActionCreator = () => {\r\n    return {type: 'SEND-MESSAGE'} as const;\r\n};\r\nexport const ChangeMessageTextActionType = (text: string) => {\r\n    return {\r\n        type: 'CHANGE-MESSAGE-TEXT',\r\n        newMessage: text\r\n    } as const;\r\n};","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {\r\n    AppStateType\r\n} from '../../redux/redux-store';\r\nimport {NavLink} from 'react-router-dom';\r\nimport User from '../Users/User';\r\nimport Message from './Message';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n    ChangeMessageTextActionType,\r\n    DialogsReducerInitialStateType,\r\n    SendMessageActionCreator\r\n} from '../../redux/dialogs-reducer';\r\n\r\nconst DialogsContainer = () => {\r\n    return <SuperDialogsContainer/>\r\n};\r\n\r\nexport default DialogsContainer;\r\n\r\ntype DialogItemType = {\r\n    id: number\r\n    username: string\r\n}\r\nexport const DialogItem = (props: DialogItemType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.active} className={s.user}><User photoUrl={\"https://insights.mgm-tp.com/wp-content/uploads/2019/04/default-avatar.png\"}\r\n                name={props.username}\r\n            /></NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype DialogsType = {\r\n    dialogsPage: DialogsReducerInitialStateType\r\n    sendMessage: () => void\r\n    updateNewMessageBody: (text: string) => void\r\n}\r\n\r\nexport const Dialogs = (props: DialogsType) => {\r\n    let messageValue = props.dialogsPage.newMessageText;\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value;\r\n        if (text) {\r\n            props.updateNewMessageBody(text);\r\n        }\r\n    };\r\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.key === 'Enter') {\r\n            sendMessageHandler();\r\n        }\r\n    };\r\n    const sendMessageHandler = () => {\r\n        props.sendMessage()\r\n    };\r\n\r\n    let disable = null;\r\n    if (!messageValue) {\r\n        disable = 'disable';\r\n    } else {\r\n        disable = null;\r\n    }\r\n    return <div className={s.dialogsContainer}>\r\n        <div className={s.dialogItem}>\r\n            <div className={s.dialogUsers}>\r\n                {props.dialogsPage.dialogs\r\n                    .map((t: DialogItemType) =>\r\n                        <DialogItem id={t.id}\r\n                                    username={t.username}/>)\r\n                }\r\n            </div>\r\n            <div className={s.dialogMessage}>\r\n                {props.dialogsPage.messages\r\n                    .map(m =>\r\n                        <Message message={m.message}/>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className={s.addMessage}>\r\n            <textarea onKeyPress={onKeyPressHandler} value={messageValue} onChange={onChangeHandler}/>\r\n            <button disabled={!!disable} onClick={sendMessageHandler}>Send</button>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch:Dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (text: string) => {\r\n            dispatch(ChangeMessageTextActionType(text));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(SendMessageActionCreator());\r\n        },\r\n    };\r\n};\r\n\r\n\r\nconst SuperDialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\n","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import {ActionsType} from './redux-store';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\n\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserStateType = {\r\n    items: Array<UserDataType>\r\n    totalCount: number\r\n    error: null | string\r\n    pageSize: number\r\n    currentPage: number\r\n}\r\n\r\nexport type UserDataType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    photos: PhotosType\r\n    status: string\r\n}\r\n\r\nlet UsersInitialState: UserStateType = {\r\n    items: [],\r\n    totalCount: 0,\r\n    error: null,\r\n    pageSize: 5,\r\n    currentPage: 1\r\n};\r\n\r\nexport const UsersReducer = (state = UsersInitialState, action: ActionsType): UserStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: !u.followed\r\n                        };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, items: action.items};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalCount: action.totalCount};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const FollowAC = (userID: number) => {\r\n    return {type: FOLLOW, userID} as const;\r\n};\r\n\r\nexport const SetUsersAC = (items: Array<UserDataType>) => {\r\n    return {type: SET_USERS, items} as const;\r\n};\r\nexport const SetCurrentPageAC = (currentPage: number) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage} as const;\r\n};\r\nexport const SetTotalUsersCountAC = (totalCount: number) => {\r\n    return {type: SET_TOTAL_USERS_COUNT, totalCount} as const;\r\n};","import React from 'react';\r\nimport User from './User';\r\nimport s from './User.module.css';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {Dispatch} from 'redux';\r\nimport {FollowAC, SetCurrentPageAC, SetTotalUsersCountAC, SetUsersAC, UserDataType} from '../../redux/users-reducer';\r\nimport axios from 'axios';\r\n\r\n\r\ntype UsersPropsType = UsersMapStateToPropsType & UsersMapDispatchToPropsType\r\n\r\ntype UsersMapStateToPropsType = {\r\n    items: Array<UserDataType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n}\r\ntype UsersMapDispatchToPropsType = {\r\n    follow: (userID: number) => void\r\n    setUsers: (items: Array<UserDataType>) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n}\r\n\r\nexport class Users extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        axios.get<{ items: UserDataType[], totalCount: number }>(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(200);\r\n            });\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get<{ items: UserDataType[] }>(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {pages.map(p => {\r\n                        return <span\r\n                            onClick={() => {\r\n                                this.onPageChanged(p);\r\n                            }}\r\n                            className={(this.props.currentPage === p\r\n                                ? s.selected\r\n                                : s.pages)}>{p}</span>;\r\n                    })}\r\n                </div>\r\n                {\r\n                    this.props.items.map(u => {\r\n                        const FollowHandler = () => {\r\n                            this.props.follow(u.id);\r\n                        };\r\n                        return (\r\n                            <div key={u.id} className={s.wrapper}>\r\n                                <div className={s.container}>\r\n                                    <div className={s.usersBlock}>\r\n                                        <User key={u.id}\r\n                                              name={u.name}\r\n                                              photoUrl={u.photos.large}\r\n                                              status={u.status}\r\n                                        />\r\n\r\n                                        <div>\r\n                                            <button\r\n                                                onClick={FollowHandler}\r\n                                                className={s.userButton}>\r\n                                                {u.followed ? 'UNFOLLOW' : 'FOLLOW'}\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/*<div className={s.location}>\r\n                                        {/!*<div className={s.country}>{u.location.country}</div>\r\n                                            <div className={s.city}>{u.location.city}</div>*!/}\r\n                                            </div>*/}\r\n                                </div>\r\n                            </div>);\r\n                    })}\r\n            </div>);\r\n    }\r\n}\r\n\r\n\r\nexport const UsersMapStateToProps = (state: AppStateType): { pageSize: number; totalCount: number; currentPage: number; items: Array<UserDataType> } => {\r\n    return {\r\n        items: state.usersPage.items,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage\r\n    };\r\n};\r\nexport const UsersMapDispatchToProps = (dispatch: Dispatch): UsersMapDispatchToPropsType => {\r\n    return {\r\n        follow: (userID: number) => {\r\n            dispatch(FollowAC(userID));\r\n        },\r\n        setUsers: (items: Array<UserDataType>) => {\r\n            dispatch(SetUsersAC(items));\r\n        },\r\n        setCurrentPage: (currentPage: number) => {\r\n            dispatch(SetCurrentPageAC(currentPage));\r\n        },\r\n        setTotalUsersCount: (totalCount: number) => {\r\n            dispatch(SetTotalUsersCountAC(totalCount));\r\n        }\r\n    };\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Users, UsersMapDispatchToProps, UsersMapStateToProps} from './Users'\r\n\r\n\r\nexport const UsersContainer=connect(UsersMapStateToProps,UsersMapDispatchToProps)(Users)","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Profile from './components/Profile/Profile';\r\nimport {Route} from 'react-router-dom';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport {UsersContainer} from './components/Users/UsersContainer';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <Header/>\r\n            <Navbar/>\r\n            <div className=\"container-content\">\r\n                <Route path=\"/profile\" render={() =>\r\n                    <Profile/>}\r\n                />\r\n                <Route path=\"/dialogs\" render={() =>\r\n                    <DialogsContainer />}/>\r\n                <Route path=\"/users\" render={() =>\r\n                    <UsersContainer />}/>\r\n                <Route path=\"/music\" render={() => <Music/>}/>\r\n                <Route path=\"/settings\" render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default App;\r\n","import {combineReducers, createStore} from 'redux';\r\nimport {AddNewPostActionCreator, ChangeNewPostTextActionCreator, ProfileReducer} from './profile-reducer';\r\nimport {ChangeMessageTextActionType, DialogsReducer, SendMessageActionCreator} from './dialogs-reducer';\r\nimport {FollowAC, SetCurrentPageAC, SetTotalUsersCountAC, SetUsersAC, UsersReducer} from './users-reducer';\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    dialogsPage: DialogsReducer,\r\n    usersPage: UsersReducer\r\n});\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer);\r\n\r\nexport type ActionsType = ProfileActionType | DialogsActionType | UsersActionType\r\nexport type ProfileActionType =\r\n    ReturnType<typeof AddNewPostActionCreator>\r\n    | ReturnType<typeof ChangeNewPostTextActionCreator>\r\nexport type DialogsActionType =\r\n    ReturnType<typeof SendMessageActionCreator>\r\n    | ReturnType<typeof ChangeMessageTextActionType>\r\n\r\n\r\nexport type UsersActionType = ReturnType<typeof FollowAC>\r\n    | ReturnType<typeof SetUsersAC>\r\n    | ReturnType<typeof SetCurrentPageAC>\r\n    | ReturnType<typeof SetTotalUsersCountAC>\r\n\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nexport let rerenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <React.StrictMode>\r\n                    <App/>\r\n                </React.StrictMode>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrerenderEntireTree();\r\n\r\nstore.subscribe(rerenderEntireTree);\r\n\r\n\r\n\r\n"],"sourceRoot":""}